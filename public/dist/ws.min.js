function HideAndShow(e, t) {
    for (var s, i = $(".login-content").children(), n = 0; n < i.length; n++)
        if ("none" != $(i[n]).css("display")) {
            s = $(i[n]);
            break
        }
    (s = s || $("#login_panel")).animate({
        opacity: 0
    }, "fast", function() {
        s.hide(),
        ".container" == e ? $(".login-content").hide() : $(".login-content").show(),
        e && ((e = $(e)).show(),
        e.css("opacity", "0"),
        e.animate({
            opacity: 1
        }, "slow", t))
    })
}
function initIos() {
    window.isios = !0,
    $("<style type='text/css'>body{-webkit-user-select:none;-webkit-user-drag:none;}</style>").appendTo("head"),
    $(".download_cmd").remove()
}
function showNews(e) {
    HideAndShow($("#new_panel ")),
    $("#news_frame").attr("src", "/news/" + e + ".html")
}
function ClearRoomContent() {
    MessagePage && (MessagePage.remove(),
    MessagePage = null)
}
!function() {
    "use strict";
    var i, s;
    function H(e) {
        var t = $(this).attr("command");
        switch (t) {
        case "ToRolePanel":
            HideAndShow($("#role_panel"));
            break;
        case "ToServerPanel":
            d(),
            HideAndShow($("#slist_panel"));
            break;
        case "ToLogin":
            HideAndShow($("#login_panel"));
            break;
        case "Forget":
            HideAndShow($("#reset_panel"));
            break;
        case "CancleRegist":
            HideAndShow($("#login_panel"));
            break;
        case "Down":
            HideAndShow($("#download"));
            break;
        default:
            o[t]()
        }
    }
    $(function() {
        $(".login-content").on("click", ".panel_item", H),
        $(".container").on("click", F),
        $(".role-list").on("click", ".role-item", function() {
            $(this).parent().find(".select").removeClass("select"),
            $(this).addClass("select")
        }),
        $(".channel-box").on("click", "span", U),
        $(".combat-commands").on("click", ".pfm-item", I.Perform),
        $(".sender-box").on("keyup", B),
        $(".room_items").on("click", ".room-item", S.selectItem),
        $(".bottom-bar").on("click", ".tool-item", N),
        $(".map-panel").on("click", function() {
            this.last_click = this.last_click || 0,
            500 < Date.now() - this.last_click ? this.last_click = Date.now() : C.show("map")
        }),
        $(".sender-btn").on("click", b),
        $(".room_exits").on("mousedown", S.before_click_exits).on("mouseup", S.click_exits),
        $(".room-title>.map-icon").on("click", function() {
            x.LoadMap()
        }),
        $(".validnum-box>.validnum-btn").on("click", O),
        S.init(),
        h("p") ? l() : $("#login_panel").show()
    });
    var n, t, o = {
        initReg: !1,
        isRegistValidation: !1,
        ToRegist: function() {
            HideAndShow($("#regist_panel")),
            o.initReg || ($(".validnum-box>.validnum-img").on("click", o.GetValidationImage),
            o.initReg = !0),
            D.UserAPI.IsRegistValidation(function(e) {
                (o.isRegistValidation = e) ? ($("#regist_valpanel").show(),
                o.GetValidationImage()) : $("#regist_valpanel").hide()
            })
        },
        GetValidationImage: function() {
            D.UserAPI.ValidationImage(function(e) {
                $(".validnum-box>.validnum-img").attr("src", "data:image/jpeg;base64," + e)
            })
        },
        ToUpdate: function() {
            HideAndShow("#pwd_panel"),
            D.UserAPI.GetPhone(function(e) {
                e ? ($("#pwd_phone").prop("disabled", !0).val(e),
                $("#pwd_bind").show()) : ($("#pwd_phone").prop("disabled", !1).val(""),
                $("#pwd_bind").hide())
            })
        },
        ResetPwd: function() {
            var e, t, s, i, n = $("#reset_name").val();
            return n ? /^[a-z0-9]{5,15}$/.test(n) ? (e = $("#reset_phone").val()) ? /^1\d{10}$/.test(e) ? (t = $("#reset_no").val()) ? /^\d{6}$/.test(t) ? (s = $("#reset_pwd1").val()) ? (i = $("#reset_pwd2").val()) ? i.length < 6 || 20 < i.length ? v("#update_pwd2", "密码长度在6到20之间") : i != s ? v("#reset_pwd2", "两次密码输入不一致") : (g("正在修改密码"),
            void D.UserAPI.ResetPasswordByPhone(n, e, t, s, function(e) {
                e ? (v("#reset_pwd2", e),
                HideAndShow("#reset_panel")) : HideAndShow("#login_panel")
            })) : v("#reset_pwd2", "请重复输入你的新密码") : v("#reset_pwd1", "请输入你的新密码") : v($("#reset_no").parent(), "请输入六位数字的验证码") : v($("#reset_no").parent(), "请输入你接收到的六位验证码") : v("#reset_phone", "手机号码格式错误") : v("#reset_phone", "请输入你的帐号绑定的手机号码") : v("#reset_name", "用户名格式错误,需要5-15位字母开头的字母，数字或下划线，不区分大小写") : v("#reset_name", "请输入用户名")
        },
        BindPhone: function() {
            HideAndShow("#bind_panel"),
            D.UserAPI.GetPhone(function(e) {
                $("#phone_valid").val(""),
                $("#phone_pwd").val(""),
                $(".input-error").remove(),
                e ? ($("#phone_no").prop("disabled", !0).val(e),
                $("#phone_no").prev().html("你已绑定手机，再次验证会取消绑定"),
                $("#phone_no").parent().next().find("span:last()").html("解除绑定")) : ($("#phone_no").prop("disabled", !1).val(""),
                $("#phone_no").prev().html("你要绑定的手机"),
                $("#phone_no").parent().next().find("span:last()").html("绑定"))
            })
        },
        CheckValid: function() {
            var e = $("#phone_no")
              , t = "";
            if (!e.is(":disabled")) {
                if (!(t = e.val()))
                    return v("#phone_no", "请输入你的帐号绑定的手机号码");
                if (!/^1\d{10}$/.test(t))
                    return v("#reset_phone", "手机号码格式错误")
            }
            var s, e = $("#phone_valid").val();
            return e ? /^\d{6}$/.test(e) ? (s = $("#phone_pwd").val()) ? s.length < 6 || 20 < s.length ? v("#phone_pwd", "密码长度在6到20之间") : void D.UserAPI.BindPhone(e, t, s, function(e) {
                e ? (v($("#phone_valid").parent(), e),
                HideAndShow("#bind_panel")) : HideAndShow("#role_panel")
            }) : v("#phone_pwd", "请重复输入你的新密码") : v($("#phone_valid").parent(), "请输入六位数字的验证码") : v($("#phone_valid").parent(), "请输入你接收到的六位验证码")
        },
        ReLogin: function() {
            HideAndShow($("#login_panel"));
            var e = new Date;
            e.setTime(-1e3);
            for (var t = document.cookie.split("; "), s = 0; s < t.length; s++) {
                var i = t[s].split("=");
                document.cookie = i[0] + "=''; expires=" + e.toGMTString()
            }
        },
        UpdatePwd: function() {
            var e, t = $("#update_pwd1").val(), s = $("#update_pwd2").val(), i = $("#update_pwd3").val();
            if (t.length < 6 || 20 < t.length)
                return v("#update_pwd1", "密码长度在6到20之间");
            if (s.length < 6 || 20 < s.length)
                return v("#update_pwd2", "密码长度在6到20之间");
            if (i != s)
                return v("#update_pwd3", "两次密码输入不一致");
            if ($("#pwd_bind").is(":visible")) {
                if (!(e = $("#pwd_no").val()))
                    return v($("#pwd_no").parent(), "请输入你接收到的六位验证码");
                if (!/^\d{6}$/.test(e))
                    return v($("#pwd_no").parent(), "请输入六位数字的验证码")
            }
            g("正在修改密码"),
            D.UserAPI.ChangePassword(t, s, e, function(e) {
                e.code ? HideAndShow($("#slist_panel")) : (v("#update_pwd1", e.message || "修改失败"),
                HideAndShow("#pwd_panel"))
            })
        },
        LoginIn: function() {
            var e = $("#login_name").val().toLowerCase()
              , t = $("#login_pwd").val();
            return e ? /^[a-z0-9]{5,15}$/.test(e) ? t ? t.length < 6 || 20 < t.length ? v("#login_pwd", "密码长度在6到20之间") : (g("正在登录"),
            void D.UserAPI.Login(e, t, function(e) {
                e.code ? l() : (v("#login_name", e.message || "登录失败"),
                HideAndShow("#login_panel"))
            })) : v("#login_pwd", "请输入密码") : v("#login_name", "用户名格式错误,需要5-15位字母开头的字母，数字或下划线，不区分大小写") : v("#login_name", "请输入用户名")
        },
        SelectServer: function() {
            if (n) {
                var e = parseInt($(".server-list>.select").attr("index"));
                if (!(0 <= e && e < n.length))
                    return P.Show({
                        content: "你没有选择要连接的服务器。"
                    });
                var t = n[e]
                  , t = (t || P.Show({
                    content: "你没有选择要连接的服务器。"
                }),
                g("正在连接服务器"),
                _(t),
                "s")
                  , s = new Date;
                s.setTime(s.getTime() + 2592e7),
                s.toUTCString(),
                document.cookie = t + "=" + e + "; expires=" + s.toGMTString()
            }
        },
        SelectRole: function() {
            var e = $(".role-list>.select");
            e.length && (r("login " + e.attr("roleid")),
            g("正在进入游戏"))
        },
        CreateRole: function() {
            var e = {};
            return e.name = $("#reg_name").val(),
            e.gender = $("#gender_0").is(":checked") ? 1 : 2,
            e.str = parseInt($("#reg_str").val()),
            e.con = parseInt($("#reg_con").val()),
            e.dex = parseInt($("#reg_dex").val()),
            e.int = parseInt($("#reg_int").val()),
            /^[\u4E00-\u9FA5]{2,5}$/.test(e.name) ? e.str < 15 || 30 < e.str ? v("#reg_name", "臂力需要在15-30之间") : e.con < 15 || 30 < e.con ? v("#reg_name", "根骨需要在15-30之间") : e.dex < 15 || 30 < e.dex ? v("#reg_name", "身法需要在15-30之间") : e.int < 15 || 30 < e.int ? v("#reg_name", "悟性需要在15-30之间") : e.str + e.con + e.dex + e.int != 80 ? v("#reg_name", "先天属性需要在15-30之间，并且总和等于80") : (g("正在创建角色"),
            void r("createrole " + e.name + " " + e.gender + " " + e.str + " " + e.con + " " + e.dex + " " + e.int)) : v("#reg_name", "名称格式错误，只能使用2-5位中文字符")
        },
        AddRole: function() {
            if (4 < $(".role-list>.role-item").length)
                return P.Show({
                    content: "你只能最多创建五个角色"
                });
            HideAndShow($("#addrole_panel")),
            e("name"),
            e("prop"),
            e("id")
        },
        DeleteRole: function() {
            var e, t = $(".role-list>.select");
            !t.length || (e = t.attr("roleid")) && P.Show({
                content: "是否确认删除角色：" + t.html(),
                onOK: function() {
                    r("deleterole " + e)
                }
            })
        },
        Regist: function() {
            var e = $("#regist_name").val().toLowerCase()
              , t = $("#regist_pwd1").val();
            if (!e)
                return v("#regist_name", "请输入用户名");
            if (!/^[a-z0-9]{5,15}$/.test(e))
                return v("#regist_name", "用户名需要是5-10个英文字符");
            if (!t)
                return v("#regist_pwd1", "请输入密码");
            if (t.length < 6 || 20 < t.length)
                return v("#regist_pwd1", "密码长度在6到20之间");
            if (t != $("#regist_pwd2").val())
                return v("#regist_pwd2", "重复密码输入不一致，请重新输入");
            var s = null;
            if (o.isRegistValidation) {
                if (!(s = $("#regist_val").val()))
                    return v("#regist_valpanel", "请输入图片中的验证码");
                if (4 != s.length)
                    return v("#regist_valpanel", "请输入图片中的四位验证码")
            }
            D.UserAPI.Regist({
                Name: e,
                PassWord: t,
                ValidationNo: s
            }, function(e) {
                1 == e.code ? l() : (-1 == e.code ? v("#regist_valpanel", e.message || "验证码错误") : v("#regist_name", e.message || "注册失败"),
                HideAndShow("#regist_panel"))
            })
        }
    };
    function O() {
        var t = $(this);
        if (!t.is(":disabled")) {
            var e = t.parent().prev().prev()
              , s = e.val();
            if (e.is(":disabled"))
                s = "";
            else {
                if (!s)
                    return v(e, "请输入你的帐号绑定的手机号码");
                if (!/^1\d{10}$/.test(s))
                    return v(e, "手机号码格式错误")
            }
            D.UserAPI.SendValidateCode(s, function(e) {
                e || v(t.parent(), "验证码发送失败")
            }),
            t.prop("disabled", !0),
            t.html("120秒后重新发送"),
            a(0, t)
        }
    }
    function a(e, t) {
        120 == e ? (t.prop("disabled", !1),
        t.html("发送验证码")) : (t.html(120 - e + "秒后重新发送"),
        e++,
        window.setTimeout(a.bind(this, e, t), 1e3))
    }
    function l() {
        if (n) {
            var e = n;
            if (e && e.length) {
                var t = h("s")
                  , t = t ? n[t] : 1 == e.length ? n[0] : null;
                if (t)
                    return g("正在连接服务器"),
                    _(t);
                HideAndShow("#slist_panel")
            } else
                HideAndShow("#login_panel"),
                v("#login_pwd", "获取服务器列表出错")
        } else
            g("正在获取服务器列表"),
            D.UserAPI.GetServer(function(e) {
                if (e && "string" != typeof e) {
                    if (n = e || []) {
                        "localhost" == window.location.hostname && (n.push({
                            ID: 99,
                            Name: "本地测试1",
                            IP: "127.0.0.1",
                            Port: 25631
                        }),
                        n.push({
                            ID: 100,
                            Name: "本地测试2",
                            IP: "127.0.0.1",
                            Port: 25632
                        }));
                        for (var t = [], s = ["武神传说", "武神传说", "武神传说", "武神传说"], i = 0; i < n.length; i++)
                            n[i].IsTest && "?test" != window.location.search && "localhost" != window.location.hostname && "test.wsmud.com" !== window.location.host ? n.splice(i, 1) : (t.push("<li class='role-item"),
                            0 == i && t.push(" select"),
                            t.push("' index='" + i + "'>"),
                            t.push(s[i]),
                            t.push("&nbsp;&nbsp;"),
                            t.push(n[i].Name),
                            n[i].IsRcd && t.push("<span style='color:red;font-size:0.5rem;line-height:2rem;height:2rem;'>&nbsp;（推荐）</span>"),
                            t.push("</li>"));
                        $(".server-list").html(t.join("")).on("click", "li", function() {
                            var e = $(this);
                            e.is(".select") || (e.parent().find(".select").removeClass("select"),
                            e.addClass("select"))
                        })
                    }
                    l()
                } else
                    v("#login_pwd", "获取服务器列表出错")
            })
    }
    function h(e) {
        var e = new RegExp("(^| )" + e + "=([^;]*)(;|$)");
        return (e = document.cookie.match(e)) ? unescape(e[2]) : null
    }
    function F(e) {
        var t = $(e.target)
          , e = t.attr("cmd");
        if (e = e || t.parent().attr("cmd"))
            if ("_" == e[0]) {
                var s = e.split(" ");
                switch (s[0]) {
                case "_confirm":
                    P.Process(s);
                    break;
                case "_setting":
                    T.save(s[1], s[2]);
                    break;
                case "_close":
                    y.Close(t);
                    break;
                case "_hide":
                    Storage.ban_user(s[1])
                }
            } else
                r(e),
                t.parent().is(".sel") && t.parent().remove();
        else
            c && !t.closest(".chat-panel").length && ($(".chat-panel").addClass("hide"),
            c = !1),
            P.Close();
        return !1
    }
    function r(e) {
        f || (i && i.Connected() ? i.Send(e) : (t = e,
        k("<red>连接中断，正在重新连线...</red>"),
        _(s)))
    }
    function U() {
        var e, t = $(this), s = t.attr("channel");
        if ("emote" == s)
            (e = $(".channel-emotes")).is(".hide") ? (e.removeClass("hide"),
            S.emtoes || (r("emote"),
            S.emtoes = [],
            $(".sender-box").blur(),
            e.on("click", "span", function() {
                var e = $(this).html();
                $(".sender-box").val("*" + e).focus(),
                $(".channel-emotes").addClass("hide")
            }))) : $(".channel-emotes").addClass("hide");
        else if (!t.is(".selected"))
            return (e = t.parent()).children().removeClass("selected"),
            t.addClass("selected"),
            e.attr("channel", s),
            $(".sender-box").focus(),
            !1
    }
    function N(e) {
        var t = $(this).attr("command");
        if (t) {
            switch (t) {
            case "showtool":
                m.ShowTools();
                break;
            case "showchat":
                var s = $(".chat-panel").toggleClass("hide");
                return s.is(".hide") ? c = !1 : (c = !0,
                s.find("input").val("").focus()),
                !1;
            case "showcombat":
                return I.Show();
            case "stopstate":
                r("stopstate");
                break;
            default:
                C.show(t)
            }
            return !1
        }
    }
    var c = !1;
    var m = {
        Tools: null,
        HideTool: null,
        ToolState: 0,
        ToolOpacity: 0,
        ToolSpeed: 0,
        InitTools: function() {
            if (!this.Tools) {
                var e = $(".right-bar>.tool-item");
                this.Tools = [];
                for (var t = 0; t < e.length; t++)
                    this.Tools.push(e[t]);
                this.HideTool = $(".br-tool")
            }
        },
        ShowTools: function() {
            if (this.InitTools(),
            1 != this.ToolState) {
                if (0 == this.ToolState) {
                    for (var e = 0; e < this.Tools.length; e++)
                        this.Tools[e].style.display = "",
                        this.Tools[e].style.opacity = 0;
                    this.ToolSpeed = 200,
                    this.ToolOpacity = 0,
                    $(this.HideTool).removeClass("hide-tool")
                } else
                    this.ToolOpacity = 100,
                    this.ToolSpeed = 100,
                    $(this.HideTool).addClass("hide-tool");
                window.setTimeout(this.ShowToolsAnimate.bind(this, this.ToolState), 100),
                this.ToolState = 1
            }
        },
        ShowToolsAnimate: function(e) {
            if (0 == e) {
                this.ToolOpacity = this.ToolOpacity + this.ToolSpeed;
                for (var t = this.ToolOpacity, s = this.Tools.length - 1; 0 <= s && (this.Tools[s].style.opacity = t < 0 ? 0 : 100 < t ? 1 : t / 100,
                !((t -= 20) < 0)); s--)
                    ;
                this.ToolOpacity -= 30,
                t < 100 ? window.setTimeout(this.ShowToolsAnimate.bind(this, e), 100) : this.ToolState = 2
            } else {
                this.ToolOpacity = this.ToolOpacity - this.ToolSpeed;
                for (t = this.ToolOpacity,
                s = 0; s < this.Tools.length && (this.Tools[s].style.opacity = t < 0 ? 0 : 100 < t ? 1 : t / 100,
                !(100 <= (t += 20))); s++)
                    ;
                if (this.ToolOpacity -= 20,
                0 <= t)
                    window.setTimeout(this.ShowToolsAnimate.bind(this, e), 100);
                else
                    for (s = this.ToolState = 0; s < this.Tools.length; s++)
                        this.Tools[s].style.display = "none"
            }
        },
        showFlag: function(e, t) {
            this.InitTools(),
            t < 0 ? t = 0 : 99 < t && (t = 99);
            for (var s = 0; s < this.Tools.length; s++)
                if (this.Tools[s].getAttribute("command") == e) {
                    var i = $(this.Tools[s]);
                    t ? i.find(".tag").html(t).removeClass("hide") : i.find(".tag").addClass("hide");
                    break
                }
        }
    };
    function d() {
        i && i.Connected() && i.Destroy(),
        i = null
    }
    var p, u, f = !1;
    function _(e, t) {
        f || (s = e,
        console.log("重新连接", null == i ? "未连接" : "已连接"),
        d(),
        i = new q(e.IP,e.Port),
        f = !0,
        i.OnError = function(e, t) {
            f = !1,
            e && g("<strong>连接失败：</strong>" + (e = e.isTrusted ? "服务器没有响应，请稍后重试" : e))
        }
        ,
        i.OnConnect = function() {
            f = !1,
            t || S.player ? r(t ? h("u") + " " + h("p") + " " + t + " " + e.ID : h("u") + " " + h("p") + " " + S.player) : (g("正在获取角色列表..."),
            r(h("u") + " " + h("p")))
        }
        ,
        i.OnClose = function(e) {
            f = !1,
            console.log(this.Port, this.ChangeServer),
            this.ChangeServer ? this.ChangeServer = !1 : this.Connected() || (S.player ? (S.clear(),
            k("<red>你的连接中断了...</red>")) : HideAndShow($("#slist_panel")))
        }
        ,
        i.OnData = G,
        i.OnMessage = k,
        i.Connect())
    }
    function v(e, t) {
        $(e).focus().parent().find(".input-error").remove(),
        $("<div class='input-error'>" + t + "</div>").insertAfter(e)
    }
    function g(e) {
        for (var t = $(".login-content").children(), s = 0; s < t.length; s++)
            "none" == $(t[s]).css("display") || $(t[s]).is(".signinfo") || $(t[s]).hide();
        $("#loader").css("opacity", 1).show().find("#loader_msg").html(e)
    }
    var w = 0;
    function k(e) {
        u = u || $("<pre></pre>").appendTo(p),
        1e3 < w && (w = 0,
        u.empty()),
        u.append(e + "\n"),
        w++,
        S.contentScroll && (p[0].scrollTop = 99999)
    }
    function G(e) {
        var t = S[e.type];
        t && t(e)
    }
    function B(e) {
        13 == e.keyCode && b()
    }
    function b() {
        var e = $(".sender-box").val();
        if (e) {
            if (100 < e.length)
                return k("<hir>你输入的内容太多了。</hir>");
            var t = $(".channel-box").attr("channel");
            $(".sender-box").val("").focus(),
            r(t + " " + e)
        }
    }
    function e(e) {
        switch (e) {
        case "name":
            $("#reg_name").val(function(e, t) {
                t = t || parseInt(2 * Math.random()) + 1;
                var s = [];
                2 == t ? ((t = parseInt(Math.random() * E.length)) % 2 == 1 && --t,
                s.push(E[t++]),
                s.push(E[t])) : s.push(L[parseInt(Math.random() * L.length)]);
                s.push(0 == e ? A[parseInt(Math.random() * A.length)] : R[parseInt(Math.random() * R.length)]);
                1 < parseInt(4 * Math.random()) && s.push(0 == e ? A[parseInt(Math.random() * A.length)] : R[parseInt(Math.random() * R.length)]);
                return s.join("")
            }($("#gender_0").is(":checked") ? 0 : 1));
            break;
        case "id":
            $("#reg_id").val(function() {
                for (var e = "abcdefghijklmnopqrstuvwxyz", t = "123456789", s = [], i = parseInt(3 * Math.random()) + 3, n = 0; n < i; n++)
                    s.push(n < 3 ? e[parseInt(Math.random() * e.length)] : t[parseInt(Math.random() * t.length)]);
                return s.join("")
            }());
            break;
        case "prop":
            var t = function() {
                for (var e = 20, t = [], s = 0; s < 4; s++) {
                    var i = parseInt(15 * Math.random() + 1);
                    i <= e ? (3 == s ? i = e : e -= i,
                    t[s] = i) : (t[s] = e,
                    e = 0)
                }
                var n = {};
                return n.str = t[0] + 15,
                n.con = t[1] + 15,
                n.dex = t[2] + 15,
                n.int = t[3] + 15,
                n
            }();
            $("#reg_str").val(t.str),
            $("#reg_con").val(t.con),
            $("#reg_dex").val(t.dex),
            $("#reg_int").val(t.int)
        }
    }
    var S = {
        itemsElement: null,
        contentScroll: !0,
        clear: function() {
            C.pack.items = null,
            C.skills.items = null,
            this.state(null)
        },
        init: function() {
            S.itemsElement = $(".room_items"),
            (p = $(".content-message")).on("mousedown", function() {
                S.contentScroll = !1
            }),
            p.on("mouseup", function() {
                S.contentScroll = !0
            })
        },
        onContentScroll: function(e) {
            S.auto_scroll ? S.auto_scroll = !1 : S.contentScroll ? (setTimeout(function() {
                S.contentScroll = !0
            }, 4e3),
            S.contentScroll = !1) : p[0].scrollTop + p.height() >= p[0].scrollHeight && (S.contentScroll = !0)
        },
        regist: function(e) {
            e.result && (HideAndShow("#addrole_panel"),
            $("#addrole_panel .input-error").html(e.result))
        },
        flash: function() {
            u && (S._flash_show ? (u.find("fla").hide(),
            S._flash_show = !1) : (u.find("fla").show(),
            S._flash_show = !0))
        },
        emote: function(e) {
            S.emotes = e.items || 0;
            for (var t = [], s = 0; s < S.emotes.length; s++)
                t.push("<span>"),
                t.push(S.emotes[s]),
                t.push("</span>");
            $(".channel-emotes").html(t.join(""))
        },
        deleterole: function(e) {
            var t, s;
            e.result ? ((t = $("#role_panel>ul>.content>.role-list>.role-item[roleid='" + e.id + "']")).remove(),
            s = $("#role_panel>ul>.content>.role-list>.role-item"),
            t.is(".select") && s.length ? $(s[0]).addClass("select") : s.length || o.AddRole()) : P.Show({
                content: "<span class='input-error'>" + (e.message || "删除失败") + "</span>"
            })
        },
        cross: function(e) {
            for (var t = null, s = 0; s < n.length; s++)
                n[s].ID == e.sid && (t = n[s]);
            t && (i.ChangeServer = !0,
            i.Close(),
            C.pack.items = null,
            "duizhan" == e.cross_type && (C.skills.items = null,
            C.skills.isShow = !1),
            console.log("重新连接到", t.Name),
            e.pid || S.die({
                relive: !0
            }),
            _(t, e.pid))
        },
        roles: function(e) {
            var t = e.roles;
            if (t.length) {
                HideAndShow("#role_panel");
                for (var s = [], i = 0; i < t.length; i++)
                    s.push("<li class='role-item"),
                    0 == i && s.push(" select"),
                    s.push("' roleid='" + t[i].id + "'>"),
                    s.push(t[i].title),
                    s.push("&nbsp;&nbsp;"),
                    s.push(t[i].name),
                    s.push("</li>");
                $(".role-list").html(s.join(""))
            } else
                o.AddRole()
        },
        loginerror: function(e) {
            $(".container").hide(),
            $(".login-content").show(),
            g("<strong>登录失败：</strong>" + e.msg)
        },
        login: function(e) {
            S.player || HideAndShow(".container"),
            S.player = e.id,
            T.load(e.setting),
            t && (r(t),
            t = null)
        },
        selectItem: function(e) {
            if ($(e.target).is(".status-item")) {
                e = e.target.getAttribute("sid");
                if (e)
                    return r("status " + e)
            }
            var t, s, e = $(this).attr("itemid");
            e && (e == S.player ? (t = $(this).find(".item-name").html(),
            s = [{
                cmd: "look " + e,
                name: "查看"
            }, {
                cmd: "dazuo",
                name: "打坐"
            }, {
                cmd: "liaoshang",
                name: "疗伤"
            }],
            C.team.items && C.team.items.length && (s.push({
                cmd: "team out",
                name: "退出队伍"
            }),
            C.team.isCap && (s.push({
                cmd: "team dismiss",
                name: "解散队伍"
            }),
            s.push({
                cmd: "team set",
                name: "更改分配方式"
            }))),
            S.item({
                id: e,
                desc: t,
                commands: s
            })) : (console.log(e),
            r("select " + e)))
        },
        countwidth: function(e, t) {
            e = 100 * e / t;
            return e = 100 < (e = e < 0 ? 0 : e) ? 100 : e
        },
        itemremove: function(e) {
            var t = I.STATUS[e.id];
            if (t) {
                for (var s in t.items)
                    clearInterval(t.items[s].handler);
                var i = t.elem.parent();
                i.next().is(".item-commands") && i.next().remove(),
                i.remove(),
                delete I.STATUS[e.id]
            }
        },
        itemadd: function(e) {
            var t, s;
            T.off_plist && e.p && e.id != S.player || (t = e,
            s = T.item_firstme && t.id == S.player ? $(S.create_roomitem(t)).prependTo(S.itemsElement) : $(S.create_roomitem(t)).appendTo(S.itemsElement),
            I.STATUS[e.id] && S.itemremove(e),
            I.AppendStatusItem(t.id, s.find(".item-status-bar"), t.status))
        },
        items: function(e) {
            S.itemsElement.empty(),
            I.STATUS = {};
            for (var t = 0; t < e.items.length; t++) {
                var s, i = e.items[t];
                !i || T.off_plist && i.p && i.id != S.player || (s = T.item_firstme && i.id == S.player ? $(S.create_roomitem(i)).prependTo(S.itemsElement) : $(S.create_roomitem(i)).appendTo(S.itemsElement),
                I.AppendStatusItem(i.id, s.find(".item-status-bar"), i.status))
            }
            S.cur_room = e
        },
        get_hpnum: function(e, t) {
            t = e / t;
            return .8 < t ? "<hiy>" + e + "</hiy>" : .5 < t ? "<yel>" + e + "</yel>" : .2 < t ? "<red>" + e + "</red>" : "<hir>" + e + "</hir>"
        },
        create_roomitem: function(e) {
            var t = [];
            return t.push("<div class='room-item' itemid='" + e.id + "'>"),
            e.max_hp && (t.push('<div class="item-status"'),
            I.IsShow && !T.off_hp || t.push(' style="display:none;"'),
            t.push(">"),
            t.push('<div class="progress hp"><div class="progress-bar" max="' + e.max_hp + '"  style="width:' + S.countwidth(e.hp, e.max_hp) + '%"></div></div>'),
            t.push('<div class="progress mp"><div class="progress-bar" max="' + e.max_mp + '"   style="width:' + S.countwidth(e.mp, e.max_mp) + '%"></div></div>'),
            t.push("</div>")),
            t.push("<span class='item-status-bar'>"),
            t.push("</span>"),
            t.push("<span class='item-name'>"),
            t.push(e.name),
            T.show_hpnum && e.max_hp && t.push('<span class="progress-num">[' + this.get_hpnum(e.hp, e.max_hp) + "<nor>/</nor><hiy>" + e.max_hp + "</hiy>]</span>"),
            t.push("</span>"),
            t.push("</div>"),
            t.join("")
        },
        room: function(e) {
            $(".room_items").html(""),
            $(".room-name").html(e.name),
            $(".room_desc").html(e.desc),
            S.room_name = e.name,
            !T.keep_msg && u ? (u.remove(),
            u = null,
            w = 0) : T.keep_msg && k("你来到了" + e.name + "。"),
            S.room_path != e.path && (T.show_roomitem && S.searchItems(e),
            I.ShowRoomCommands(e.commands),
            S.room_path = e.path,
            x.SetRoom(e))
        },
        roomHiddenItemsReg: /<\w{3}\scmd=['"](.+?)['"]>(.+?)<\/\w{3}>/g,
        searchItems: function(e) {
            for (var t, s = e.desc; null !== (t = this.roomHiddenItemsReg.exec(s)); )
                e.commands.push({
                    cmd: t[1],
                    name: t[2]
                })
        },
        exits: function(e) {
            var t = e ? e.items : S.room_exits;
            if (t)
                if (S.room_exits = t,
                T.exits_dir) {
                    for (var s = ["这里明显的出口有："], i = [], n = 0; n < x.DIRS.length; n++)
                        t[x.DIRS[n]] && i.push(x.DIRS[n]);
                    for (n = 0; n < i.length; n++)
                        0 < n && s.push(n == i.length - 1 ? " 和 " : "、"),
                        s.push("<span class='exits-item' dir='" + i[n] + "'>" + i[n] + "</span>");
                    i.length ? $(".room_exits").html(s.join("")) : $(".room_exits").html("<HIK>这里没有明显的出口。<HIK>")
                } else
                    $(".room_exits").html(x.CreateExitsMap(t, $(".container").width(), S.room_name))
        },
        before_click_exits: function(e) {
            e = $(e.target);
            e.attr("dir") && (e.is("rect") ? e.attr("fill", "gray") : e.is("text") && e.prev().attr("fill", "gray"))
        },
        click_exits: function(e) {
            var e = $(e.target)
              , t = e.attr("dir");
            t && (e.is("rect") ? e.attr("fill", "#232323") : e.is("text") && e.prev().attr("fill", "#232323"),
            r("go " + t))
        },
        item: function(e) {
            if (k(e.desc),
            e.commands) {
                for (var t, s = ["<div class='item-commands'>"], i = 0; i < e.commands.length; i++)
                    s.push("<span cmd='" + e.commands[i].cmd + "'>"),
                    s.push(e.commands[i].name),
                    s.push("</span>");
                if (s.push("</div>"),
                T.show_command && I.STATUS[e.id])
                    return S.itemsElement.find(".item-commands").remove(),
                    t = I.STATUS[e.id].elem.parent(),
                    $(s.join("")).insertAfter(t),
                    p[0].scrollTop = 99999;
                k(s.join(""))
            }
        },
        actions: function(e) {
            I.ShowActions(e)
        },
        cmds: function(e) {
            if (e.items) {
                var t = ["<div class='item-commands'>"];
                e.items.length || (e.items = [e.items]);
                for (var s = 0; s < e.items.length; s++)
                    t.push("<span cmd='" + e.items[s].cmd + "'>"),
                    t.push(e.items[s].name),
                    t.push("</span>");
                t.push("</div>"),
                k(t.join(""))
            }
        },
        map: function(e) {
            x.SetMapBuffer(e.map, e.path),
            x.ShowMap(e.map, e.path)
        },
        updatemap: function(e) {
            x.UpdateMap(e.map, e)
        },
        dialog: function(e) {
            C.show(e.dialog, e)
        },
        sc: function(e) {
            I.StatusChanged(e)
        },
        perform: function(e) {
            I.ShowPFM(e)
        },
        disobj: function(e) {
            I.DisObj(e)
        },
        changepfm: function(e) {
            I.ChangeDistime(e)
        },
        clearDistime: function(e) {
            I.ClearDistime(e)
        },
        pay: function(e) {
            var t;
            3 === e.pay ? (k("<yel>请打开微信扫描二维码支付：</yel>\n"),
            (t = $('<div style="width:100%;text-align:center;"><img style="border:solid 2px #808088" src="' + e.url + '"/></div>')).children(0).on("load", function() {
                k("")
            }),
            u.append(t)) : window.location.href = e.url
        },
        dispfm: function(e) {
            I.On_Perform(e)
        },
        status: function(e) {
            I.StatusItemChanged(e)
        },
        combat: function(e) {
            e.start && (1 != T.auto_showcombat || I.IsShow || I.Show(),
            1 != T.auto_hideroom || T.hide_roomdesc || $(".room_desc").hide()),
            e.end && 1 == T.auto_hideroom && !T.hide_roomdesc && $(".room_desc").show()
        },
        state: function(e) {
            if (e && e.state) {
                var t = ["<span class='title'>" + e.state + "</span>"];
                if (e.commands)
                    for (var s = 0; s < e.commands.length; s++)
                        t.push("<span class='item-command' cmd='" + e.commands[s].cmd + "'>"),
                        t.push(e.commands[s].name),
                        t.push("</span>");
                $(".state-bar").removeClass("hide").html(t.join("")),
                e.no_stop ? $(".state-tool").hide() : $(".state-tool").show(),
                S.states = e.desc,
                S.timer && clearInterval(S.timer),
                S.states && S.states.length && ("string" == typeof S.states && (S.states = [S.states]),
                S.timer = setInterval(S.updatestate, e.interval || 5e3))
            } else
                $(".state-bar").addClass("hide").empty(),
                $(".state-tool").hide(),
                clearInterval(S.timer)
        },
        updatestate: function() {
            var e;
            S.states && i && (e = S.states.length,
            k(S.states[parseInt(Math.random() * e)]))
        },
        die: function(e) {
            if (e.relive)
                return S.state({});
            S.state({
                state: "<hiw>你已经死亡：</hiw>",
                no_stop: !0,
                desc: ["<blk>一股阴冷的气息包围着你。</blk>", "<blu>朦胧中你好像听到有人在喊：过来吧，过来吧！</blu>"],
                commands: e.commands,
                interval: 12e3
            })
        },
        warn: function(e) {
            y.Show(e)
        },
        msg: function(e) {
            var t, e = C.channel.createElement(e, !T.no_spmsg);
            e && (T.no_spmsg ? k(e) : (S.ChannelElement || (S.ChannelCount = 0,
            S.ChannelElement = $("<div class='channel'><pre></pre></div>").insertBefore(p),
            S.ChannelPro = S.ChannelElement.find("pre"),
            S.ChannelElement.on("click", C.channel.show.bind(C.channel)),
            S.ChannelElement.on("mousedown", C.channel.endScroll),
            S.ChannelElement.on("mouseup", C.channel.beginScroll)),
            t = C.channel.isBottom(),
            1 == C.channel.datas.length && S.ChannelPro.empty(),
            S.ChannelPro.append(e),
            t && C.channel.scrollBottom()))
        },
        addAction: function(e) {
            I.AddObj(e.id, e.name, e.distime)
        },
        removeAction: function(e) {
            I.DisObj({
                id: e.id,
                remove: !0
            })
        }
    }
      , y = {
        Elemes: [],
        Show: function(e) {
            var t = ["<div class='warn-dialog'>"];
            t.push("<div class='warn-content'>"),
            t.push(e.content),
            t.push("</div>"),
            t.push("<div class='item-commands'>");
            for (var s = 0; s < e.cmds.length; s++) {
                var i = e.cmds[s];
                t.push("<span cmd='"),
                t.push(i.cmd),
                t.push("'>"),
                t.push(i.name),
                t.push("</span>")
            }
            t.push("</div>");
            var n = $(t.join("")).appendTo(".bottom-bar")
              , o = (this.Elemes.push(n),
            window.setTimeout(this.Settop, 1),
            this.Close.bind(this, n));
            e.time && window.setTimeout(o, e.time),
            n.on("click", "span", o)
        },
        Close: function(e) {
            -1 < this.Elemes.indexOf(e) && (e.remove(),
            this.Elemes.Remove(e),
            this.Settop())
        },
        Settop: function() {
            for (var e = 0, t = 0; t < y.Elemes.length; t++) {
                var s = y.Elemes[t];
                s.css("bottom", e),
                e += s.height() + 14
            }
        }
    }
      , I = {
        IsShow: !1,
        Actions: null,
        Skills: null,
        Show: function() {
            if (I.IsShow)
                return I.Hide();
            this.Actions || r("actions"),
            I.IsShow = !0,
            T.off_hp || $(".room-item>.item-status").show(),
            $(".combat-panel").removeClass("hide")
        },
        Hide: function() {
            I.IsShow = !1,
            T.off_hp || $(".room-item>.item-status").hide(),
            $(".combat-panel").addClass("hide")
        },
        ShowRoomCommands: function(e) {
            if (this.RoomCommands)
                for (var t = 0; t < this.RoomCommands.length; t++)
                    this.RoomCommands[t].elem && this.RoomCommands[t].elem.remove();
            this.RoomCommands = e,
            this.create_actions()
        },
        ShowActions: function(e) {
            this.Actions = e.actions || [],
            this.create_actions(),
            e.skills && this.ShowPFM(e)
        },
        ShowPFM: function(e) {
            this.Skills = e.skills || [],
            this.create_skillItems(e.skills)
        },
        create_actions: function(e) {
            if (this.Actions)
                for (var t, s, i = this.Actions.concat(this.RoomCommands || []), n = $(".room-commands"), o = 0; o < i.length; o++)
                    i.elem || (t = i[o],
                    (s = []).push("<span class='act-item' cmd='" + t.cmd + "'>"),
                    s.push(t.name),
                    t.distime && s.push("<span class='shadow'></span>"),
                    s.push("</span>"),
                    t.elem || (t.elem = $(s.join("")).appendTo(n)))
        },
        DisObj: function(e) {
            if (this.Actions)
                for (var t = e.act ? e.id : "use " + e.id, s = 0; s < this.Actions.length; s++) {
                    var i = this.Actions[s];
                    if (i.cmd === t) {
                        if (e.remove)
                            return this.Actions.splice(s, 1),
                            i.elem.remove();
                        this.ANI_OBJ(i.elem.find(".shadow").show()[0], e.time, 0)
                    }
                }
        },
        AddObj: function(e, t) {
            if (this.Actions) {
                for (var s = "use " + e, i = 0; i < this.Actions.length; i++)
                    if (this.Actions[i].cmd == s)
                        return;
                this.Actions.push({
                    cmd: "use " + e,
                    name: t.replace(/\<.+?\>/g, "")
                }),
                this.create_actions()
            }
        },
        ANI_OBJ: function(e, t, s) {
            if (e) {
                var i = 100 * s / t;
                if (100 <= i)
                    return e.style.display = "none";
                e.style.left = i + "%",
                setTimeout(I.ANI_OBJ, 1e3, e, t, s + 1e3)
            }
        },
        create_skillItems: function(e) {
            var t = $(".combat-commands").empty();
            if (e.length)
                for (var s = 0; s < e.length; s++) {
                    var i = [];
                    i.push("<span class='pfm-item' pid='" + e[s].id + "'>"),
                    i.push(e[s].name),
                    i.push("<span class='shadow'></span>"),
                    i.push("</span>"),
                    e[s].shadow = $(i.join("")).appendTo(t).find(".shadow")[0]
                }
        },
        ChangeDistime: function(e) {
            for (var t = e.id.replace("/", "."), s = 0; s < I.dis_pfms.length; s++)
                if (I.dis_pfms[s].id == t) {
                    I.dis_pfms[s].ani_time += e.time;
                    break
                }
        },
        ClearDistime: function(e) {
            if (I.dis_pfms)
                for (var t = e.id && e.id.replace("/", "."), s = 0; s < I.dis_pfms.length; s++)
                    t && I.dis_pfms[s].id != t || (I.dis_pfms[s].ani_time = 0)
        },
        redisable: function() {
            I.dis_pfms = [];
            for (var e = 0; e < I.Skills.length; e++) {
                var t = I.Skills[e];
                I.dis_pfms.push({
                    id: t.id,
                    distime: t.distime,
                    ani_time: t.distime
                })
            }
            I.time_handler || I.ANI_PFM()
        },
        On_Perform: function(e) {
            if (this.Skills) {
                if ("all" === e.id && !e.rtime)
                    return this.redisable();
                e.rtime = e.rtime || 0,
                e.distime = e.distime || 0,
                this.dis_pfms || (this.dis_pfms = []);
                for (var t = 0; t < this.dis_pfms.length; t++)
                    this.dis_pfms[t].id == e.id ? (e.id = null,
                    this.dis_pfms[t].distime = e.distime,
                    this.dis_pfms[t].ani_time = e.distime) : this.dis_pfms[t].ani_time < e.rtime && (this.dis_pfms[t].ani_time = e.rtime,
                    this.dis_pfms[t].distime = e.rtime);
                e.id && this.dis_pfms.push({
                    id: e.id,
                    distime: e.distime,
                    ani_time: e.distime
                }),
                I.ani_time = I.ani_time || 0,
                e.rtime > I.ani_time && (I.distime = e.rtime,
                I.ani_time = e.rtime),
                this.time_handler || I.ANI_PFM()
            }
        },
        PFM_INTERVAL: 300,
        ANI_PFM: function() {
            for (var e = 100 * I.ani_time / I.distime, t = 0; t < I.Skills.length; t++) {
                for (var s = I.Skills[t], i = e, n = 0; n < I.dis_pfms.length; n++)
                    if (I.dis_pfms[n].id == s.id && I.dis_pfms[n].distime) {
                        (i = 100 * I.dis_pfms[n].ani_time / I.dis_pfms[n].distime) < 0 ? I.dis_pfms.splice(n, 1) : I.dis_pfms[n].ani_time -= I.PFM_INTERVAL;
                        break
                    }
                0 < i ? (i < 0 && (i = 0),
                s.shadow.style.left = 100 - i + "%",
                s.shadow.style.display = "block") : (s.shadow.style.display = "none",
                s.shadow.style.left = "0px")
            }
            0 < I.ani_time || I.dis_pfms.length ? I.time_handler = setTimeout(I.ANI_PFM, I.PFM_INTERVAL) : I.time_handler = null,
            I.ani_time -= I.PFM_INTERVAL
        },
        StatusChanged: function(e) {
            for (var t = $(".room-item"), s = 0; s < t.length; s++) {
                var i = $(t[s]);
                if (i.attr("itemid") == e.id) {
                    this.UpdaeBar(e, "mp", i),
                    this.UpdaeBar(e, "hp", i);
                    break
                }
            }
        },
        UpdaeBar: function(e, t, s) {
            var i, n = e[t], o = 0;
            null != n && (i = s.find("." + t + ">.progress-bar"),
            e["max_" + t] ? (o = e["max_" + t],
            i.attr("max", o)) : o = parseInt(i.attr("max")),
            T.show_hpnum && "hp" == t && s.find(".progress-num").html("[" + S.get_hpnum(n, o) + "<nor>/</nor><hiy>" + o + "</hiy>]"),
            i.css("width", I.CountWidth(n, o) + "%"),
            T.show_damage && e.damage && e.id != S.player && (t = 0,
            t = -1 == e.damage ? parseInt(1e3 * (o - n) / o) / 10 : parseInt(1e3 * e.damage / o) / 10,
            (i = (i = s.find(".item-damage")).length ? i : $('<span class="item-damage">[<hiy>0%</hiy>]<span>').appendTo(s.find(".item-name"))).html("[<hiy>" + t + "%</hiy>]")))
        },
        CountWidth: function(e, t) {
            return 0 == t ? 0 : 100 <= (e = 100 * e / t) ? 100 : e < 0 ? 0 : e
        },
        Perform: function() {
            var e = $(this);
            e.is("disable") || (e = e.attr("pid")) && r("perform " + e)
        },
        STATUS: {},
        AppendStatusItem: function(e, t, s) {
            var i = {
                elem: t,
                items: {}
            };
            if (s)
                for (var n = 0; n < s.length; n++)
                    this.StatusItem_add(i, s[n]);
            this.STATUS[e] = i
        },
        StatusItemChanged: function(e) {
            var t = I["StatusItem_" + e.action];
            t && t.call(I, this.STATUS[e.id], e)
        },
        StatusItem_add: function(e, t) {
            var s;
            e && ((s = []).push('<span class="status-item'),
            t.downside && s.push(" downside"),
            s.push('" sid="'),
            s.push(t.sid),
            s.push('">'),
            s.push(t.name),
            null != t.count && (s.push("x"),
            s.push(t.count)),
            s.push('<span class="shadow"></span></span>'),
            e.items[t.sid] = {
                elem: $(s.join("")).appendTo(e.elem)[0],
                name: t.name,
                count: t.count,
                duration: t.duration,
                anitime: t.duration - (t.overtime || 0)
            },
            0 < t.duration && I.StatusItemANI(e.items[t.sid]))
        },
        StatusItem_remove: function(e, t) {
            if (e) {
                var s = t.sid;
                "string" == typeof s && (s = [s]);
                for (var i = 0; i < s.length; i++) {
                    var n = e.items[s[i]];
                    n && ($(n.elem).remove(),
                    n.handler && clearTimeout(n.handler),
                    delete e.items[s[i]])
                }
            }
        },
        StatusItem_refresh: function(e, t) {
            var s;
            !e || (e = e.items[t.sid]) && (e.elem.firstChild,
            s = e.elem.lastChild,
            e.count = t.count,
            e.elem.innerHTML = e.name + "x" + e.count + s.outerHTML,
            e.handler && clearTimeout(e.handler),
            e.anitime = e.duration,
            I.StatusItemANI(e))
        },
        StatusItem_override: function(e, t) {
            e = e.items[t.sid];
            e && (e.handler && clearTimeout(e.handler),
            e.anitime = e.duration,
            I.StatusItemANI(e))
        },
        StatusItem_clear: function(e, t) {
            if (e) {
                for (var s in e.items) {
                    s = e.items[s];
                    s && ($(s.elem).remove(),
                    clearTimeout(s.handler))
                }
                e.items = {}
            }
        },
        StatusItemANI: function(e) {
            var t = e.elem.lastChild
              , s = 100 * e.anitime / e.duration;
            t.style.right = (s = s < 0 ? 0 : s) + "%",
            e.anitime = e.anitime - 1e3,
            e.handler = 0 < s ? setTimeout(I.StatusItemANI, 1e3, e) : 0
        }
    };
    var x = {
        DIRS: ["west", "north", "south", "east", "northwest", "southwest", "northeast", "southeast", "down", "up", "westdown", "northdown", "southdown", "eastdown", "westup", "northup", "southup", "eastup", "enter", "out"],
        REG: /<(\w+)>(.+)<\/\w+>/,
        CreateExitsMap: function(e, t, s) {
            var i = s.split("-")
              , i = (s = (s = 1 < i.length ? i[i.length - 1] : s).replace(/\(.*?\)/, ""),
            40)
              , n = (t - 60) / 2
              , o = 10
              , a = {};
            for (l in e.north && e.up && (e.north_2 = e.up,
            delete e.up),
            e.south && e.down && (e.south_2 = e.down,
            delete e.down),
            e)
                -1 < l.indexOf("south") || "down" == l || "out" == l ? a.s = !0 : (-1 < l.indexOf("north") || "up" == l || "enter" == l) && (a.n = !0);
            a.s && (i += 30),
            a.n && (i += 30,
            o += 30);
            var l, h, r, c, m = [];
            for (l in m.push('<svg style="margin-left:-2em" height="' + i + '" width="' + t + '">'),
            m.push('<rect x="' + n + '" y="' + o + '"  fill="dimgrey" stroke-width="1" stroke="gray" '),
            m.push('width="60" height="20"></rect>'),
            m.push(' <text x="' + (30 + n) + '" y="' + (o + 14) + '"  text-anchor="middle" style="font-size:12px;" '),
            this.pushName(m, s, !0),
            e) {
                switch (l) {
                case "west":
                case "westup":
                case "westdown":
                    h = [n - 10, o + 10],
                    r = [n, o + 10],
                    c = [n - 70, o];
                    break;
                case "east":
                case "eastup":
                case "eastdown":
                    h = [60 + n, o + 10],
                    r = [70 + n, o + 10],
                    c = [70 + n, o];
                    break;
                case "south":
                case "southup":
                case "southdown":
                case "down":
                    h = [30 + n, o + 20],
                    r = [30 + n, o + 30],
                    c = [n, o + 30];
                    break;
                case "north":
                case "northup":
                case "northdown":
                case "up":
                    h = [30 + n, o],
                    r = [30 + n, o - 10],
                    c = [n, o - 30];
                    break;
                case "northwest":
                    h = [n - 70 + 60, o - 30 + 20],
                    r = [n, o],
                    c = [n - 70, o - 30];
                    break;
                case "northeast":
                case "north_2":
                case "enter":
                    h = [70 + n, o - 30 + 20],
                    r = [60 + n, o],
                    c = [70 + n, o - 30];
                    break;
                case "southeast":
                case "south_2":
                    h = [70 + n, o + 30],
                    r = [60 + n, o + 20],
                    c = [70 + n, o + 30];
                    break;
                case "southwest":
                case "out":
                    h = [n - 70 + 60, o + 30],
                    r = [n, o + 20],
                    c = [n - 70, o + 30]
                }
                var d = e[l];
                "south_2" == l ? l = "down" : "north_2" == l && (l = "up"),
                m.push('<rect x="' + c[0] + '" y="' + c[1] + '" dir="' + l + '" fill="#232323" stroke-width="1" stroke="gray" '),
                m.push('width="60" height="20"></rect>'),
                m.push(' <text x="' + (c[0] + 30) + '" y="' + (c[1] + 14) + '" dir="' + l + '" text-anchor="middle" style="font-size:12px;"'),
                this.pushName(m, d, !1),
                h && (m.push('<line  stroke="gray" '),
                m.push(" x1='" + h[0] + "' y1='" + h[1] + "' x2='" + r[0] + "' y2='" + r[1] + "'"),
                -1 < l.indexOf("up") || -1 < l.indexOf("down") ? (m.push(" stroke-dasharray='5,5'"),
                m.push(" stroke-width='10'")) : m.push(" stroke-width='1'"),
                m.push("></line >"))
            }
            return m.push("</svg>"),
            m.join("")
        },
        colors: {
            hig: "#00FF00",
            hir: "#FF0000",
            him: "#FF00FF",
            hic: "#00FFFF",
            hiy: "#FFFF00",
            red: "#800000",
            red: "#800000",
            wht: "#C0C0C0",
            mag: "#800080",
            hiw: "#FFFFFF",
            gre: "#008000",
            blu: "#000080",
            hib: "#0000FF"
        },
        GetColor: function(e, t) {
            return this.colors[e.toLowerCase()] || "dimgrey"
        },
        ShowMap: function(e, t) {
            if (e) {
                this.CurMapID = t;
                var s = []
                  , t = x.getMinPos(e)
                  , i = 0 - t.minX
                  , n = 0 - t.minY
                  , o = 100
                  , a = $(".map-panel")
                  , l = (x.MapWidth = (t.maxX + i + 1) * o,
                0)
                  , h = a.width();
                if (x.MapWidth < h && (l = (h - x.MapWidth) / 2,
                x.MapWidth = h),
                x.MapHeight = 50 * (t.maxY + n + 1),
                !(x.MapWidth < 0 || x.MapHeight < 0)) {
                    var r = /^([a-z]{1,2})(\d)?([d|l])?$/;
                    s.push('<svg class="map" height="' + x.MapHeight + '" width="' + x.MapWidth + '">');
                    for (var c = 0; c < e.length; c++) {
                        s.push("<rect class='map-room' rm='" + e[c].id + "' ");
                        var m = (e[c].p[0] + i) * o + l + 20
                          , d = 50 * (e[c].p[1] + n) + 20
                          , p = (s.push("x='" + m + "' y='" + d + "'"),
                        s.push(' fill="dimgrey" stroke-width="1" stroke="gray" '),
                        s.push('width="60" height="20"></rect>'),
                        e[c].exits);
                        if (p)
                            for (var u = 0; u < p.length; u++) {
                                r.test(p[u]);
                                var f, _, v = RegExp.$2 ? parseInt(RegExp.$2) : 1;
                                switch (RegExp.$1) {
                                case "w":
                                    f = [m - 40 - o * (v - 1), 10 + d],
                                    _ = [m, 10 + d];
                                    break;
                                case "e":
                                    f = [m + 60, 10 + d],
                                    _ = [m + o + o * (v - 1), 10 + d];
                                    break;
                                case "s":
                                    f = [m + 30, 20 + d],
                                    _ = [m + 30, 50 + d + 50 * (v - 1)];
                                    break;
                                case "n":
                                    f = [m + 30, d],
                                    _ = [m + 30, d - 30 - 50 * (v - 1)];
                                    break;
                                case "nw":
                                    f = [m - v * o + 60, d - 50 * v + 20],
                                    _ = [m, d];
                                    break;
                                case "ne":
                                    f = [m + 60, d],
                                    _ = [m + v * o, d - 30];
                                    break;
                                case "se":
                                    f = [m + 60, 20 + d],
                                    _ = [m + v * o, d + 50 * v];
                                    break;
                                case "sw":
                                    f = [m, 20 + d],
                                    _ = [m - 40 - o * (v - 1), d + 50 * v]
                                }
                                f && (s.push('<line  stroke="gray" '),
                                s.push(" x1='" + f[0] + "' y1='" + f[1] + "' x2='" + _[0] + "' y2='" + _[1] + "'"),
                                RegExp.$3 && s.push(" stroke-dasharray='5,5'"),
                                "l" == RegExp.$3 ? s.push(" stroke-width='10'") : s.push(" stroke-width='1'"),
                                s.push("></line >"))
                            }
                        s.push(' <text x="' + (m + 30) + '" y="' + (14 + d) + '" text-anchor="middle" style="font-size:12px;" '),
                        this.pushName(s, e[c].n, !0)
                    }
                    s.push("</svg>"),
                    a.html(s.join("")),
                    this.MapContent = $("svg"),
                    this.IsShow || (this.IsShow = !0,
                    $(".map-panel").slideDown("fast")),
                    this.SetRoom(this.Room)
                }
            }
        },
        pushName: function(e, t, s) {
            var i = this.REG.exec(t);
            i ? (e.push('  fill="' + this.GetColor(i[1]) + '"'),
            e.push(">" + i[2] + "</text>")) : (e.push(' fill="'),
            e.push(s ? "#232323" : "dimgrey"),
            e.push('">' + t + "</text>"))
        },
        getMinPos: function(e) {
            for (var t = {
                minX: 99999,
                minY: 99999,
                maxX: 0,
                maxY: 0
            }, s = 0; s < e.length; s++) {
                var i = e[s].p[0]
                  , n = e[s].p[1];
                i < t.minX && (t.minX = i),
                t.maxX < i && (t.maxX = i),
                n < t.minY && (t.minY = n),
                t.maxY < n && (t.maxY = n)
            }
            return t
        },
        State: 0,
        ZoomState: 100,
        Buffer: {},
        HideItem: function() {
            0 == this.State && (this.State = 1,
            $(".room_desc").slideUp("fast"))
        },
        ShowItem: function() {
            1 == this.State && (this.State = 0,
            $(".room_desc").slideDown("fast"))
        },
        ZoomIn: function(e) {
            var t;
            e.zoom || (x.ZoomState = x.ZoomState / e.zoom,
            200 < x.ZoomState && (x.ZoomState = 200),
            x.ZoomState < 80 && (x.ZoomState = 80),
            e = x.MapWidth * x.ZoomState / 100,
            t = x.MapHeight * x.ZoomState / 100,
            this.MapContent.attr("viewBox", "0,0," + e + "," + t))
        },
        SetRoom: function(e) {
            if (this.Room = e,
            this.IsShow) {
                this.CurRoomItem && (this.CurRoomItem.attr("fill", "dimgrey"),
                this.CurRoomItem.attr("stroke", "gray")),
                this.CurRoomItem = null;
                var t, s, i = this.MapContent.find("rect[rm='" + e.path + "']"), n = (i.length && (this.CurRoomItem = i,
                this.CurRoomItem.attr("fill", "#bebebe"),
                this.CurRoomItem.attr("stroke", "gray"),
                i = [i.attr("x"), i.attr("y"), i.attr("width"), i.attr("height")],
                n = (t = document.querySelector(".map-panel")).offsetHeight,
                s = t.offsetWidth,
                t.scrollTop = i[1] - (n - i[3]) / 2,
                t.scrollLeft = i[0] - (s - i[2]) / 2),
                e.path.substr(0, e.path.lastIndexOf("/")));
                if (n != this.CurMapID) {
                    if (x.Buffer[n])
                        return x.ShowMap(x.Buffer[n], n);
                    r("map " + n)
                }
            }
        },
        LoadMap: function() {
            if (this.IsShow)
                return this.IsShow = !1,
                $(".map-panel").slideUp("fast");
            var e = x.Room;
            if (e) {
                e = e.path.substr(0, e.path.lastIndexOf("/"));
                if (e != this.CurMapID)
                    return x.Buffer[e] ? x.ShowMap(x.Buffer[e], e) : void r("map " + e);
                $(".map-panel").slideDown("fast"),
                this.IsShow = !0
            }
        },
        SetMapBuffer: function(e, t) {
            x.Buffer[t] = e
        },
        UpdateMap: function(e, t) {
            var s = x.Buffer[e];
            if (s)
                if (t.id) {
                    for (var i = 0; i < s.length; i++)
                        if (s[i].id == t.id) {
                            s[i].n = t.n || s[i].n,
                            s[i].p = t.p || s[i].p,
                            s[i].exits = t.exits || s[i].exits;
                            break
                        }
                    e == this.CurMapID && x.ShowMap(s, e)
                } else
                    x.Buffer[e] = null,
                    this.CurMapID == e && (this.CurMapID = null)
        }
    }
      , C = {
        isShow: !1,
        curItem: null,
        show: function(e, t) {
            if (e)
                if (t)
                    this[e].onData(t);
                else {
                    if (this.isShow && e == this.curItem)
                        return this.hide();
                    this.curItem && e != this.curItem && (C[C.curItem].close && C[C.curItem].close(),
                    C[C.curItem].isShow = !1,
                    C.contentElement.empty()),
                    this.init(),
                    this.curItem = e,
                    this[e].show(t)
                }
        },
        select: function(e) {
            if (this.isShow && e == this.curItem)
                return this.hide();
            this.curItem && e != this.curItem && (C[C.curItem].close && C[C.curItem].close(),
            C[C.curItem].isShow = !1,
            C.contentElement.empty()),
            this.init(),
            this.curItem = e
        },
        init: function() {
            this.isShow || (this.isInit || (this.contentElement = $(".dialog>.dialog-content"),
            this.titleElement = $(".dialog>.dialog-header>.dialog-title"),
            this.iconElement = $(".dialog>.dialog-header>.dialog-icon"),
            this.footerElement = $(".dialog>.dialog-footer").on("click", ".footer-item", C.footerClick),
            this.hiddenElement = $(".hidden-item"),
            this.element = $(".dialog"),
            $(".dialog>.dialog-header>.dialog-close").on("click", C.hide),
            this.isInit = !0),
            $(".content-room").addClass("hide"),
            this.element.removeClass("hide"),
            this.isShow = !0)
        },
        hide: function() {
            C[C.curItem].hide && 0 == C[C.curItem].hide() || (C.isShow = !1,
            $(".content-room").removeClass("hide"),
            C.element.addClass("hide"))
        },
        footerClick: function() {
            var e, t = $(this);
            t.is(".select") || (e = t.attr("for"),
            t.parent().find(".select").removeClass("select"),
            t.addClass("select"),
            C[C.curItem].footerChanged(e))
        },
        title: function(e) {
            C.titleElement.html(e)
        },
        icon: function(e) {
            this.iconElement.attr("class", "dialog-icon glyphicon glyphicon-" + e)
        },
        footer: function(e) {
            e ? this.footerElement.html(e) : this.footerElement.empty()
        },
        score: {
            footer: [["属性", ".dialog-score"], ["详细", ".dialog-score2"], ["称号", ".dialog-titles"]],
            selectIndex: 0,
            onData: function(e) {
                if (console.log(e),
                this.data = e,
                this.init_elem(),
                C.titleElement.html(e.name),
                C.icon("user"),
                e.titles)
                    this.titles = e.titles,
                    this.create_titles();
                else {
                    e.id && e.id != this.uid && (this.uid = e.id,
                    this.uid != S.player ? C.footerElement.find(".footer-item:eq(2)").hide() : C.footerElement.find(".footer-item:eq(2)").show());
                    for (var t = $((e.name ? this.footer[0] : this.footer[1])[1]).find("span"), s = 0; s < t.length; s++) {
                        var i = $(t[s])
                          , n = i.attr("data-prop");
                        n && i.html(e[n] || 0)
                    }
                }
            },
            init_elem: function() {
                if (C.init(),
                C.curItem = "score",
                !this.isShow) {
                    C.footer("");
                    for (var e = 0; e < this.footer.length; e++) {
                        $("<span class='footer-item " + (this.selectIndex == e ? "select" : "") + "' for='" + e + "'>" + this.footer[e][0] + "</span>").appendTo(C.footerElement);
                        this.footer[e][1] = $(this.footer[e][1])
                    }
                    this.isShow = !0,
                    this.footerChanged(this.selectIndex)
                }
            },
            show: function(e) {
                e || (this.selectIndex ? 1 == this.selectIndex ? r("score2") : r("score title") : r("score"),
                this.init_elem())
            },
            close: function() {
                this.footer[this.selectIndex][1].remove(),
                C.footer(""),
                this.isShow = !1
            },
            footerChanged: function(e) {
                this.data;
                e = parseInt(e),
                this.footer[this.selectIndex][1].remove(),
                this.selectIndex = e;
                var t = $(this.footer[this.selectIndex][1]).appendTo(C.contentElement.empty());
                1 == e ? this.uid && S.player != this.uid ? r("score2 " + this.uid) : r("score2") : 2 == e && (this.titles || r("score title"),
                t.on("click", ".btn-noused", function(e) {
                    for (var e = $(e.target), t = (e.is("red") && (e = e.parent()),
                    parseInt(e.attr("index"))), s = 0; s < this.titles.length; s++)
                        this.titles[s].use = s == t && !this.titles[s].use;
                    r("title " + t),
                    this.create_titles()
                }
                .bind(this)))
            },
            create_titles: function() {
                for (var e = $(".dialog-titles"), t = [], s = 0; s < this.titles.length; s++)
                    t.push("<div class='title-item'>"),
                    t.push(this.titles[s].title),
                    t.push("<span class='btn-noused' index='"),
                    t.push(s),
                    t.push("'>"),
                    t.push(this.titles[s].use ? "<red>取消</red>" : "使用"),
                    t.push("</span>"),
                    t.push("</div>");
                e.html(t.length ? t.join("") : "<div class='empty'>你还没有获得任何称号</div>")
            }
        },
        map: {
            onData: function(e) {
                C.title(e.title || "地图")
            },
            show: function() {
                C.init();
                var e = x.Room.name
                  , t = e.indexOf("-");
                -1 < t && (e = e.substr(0, t)),
                C.title(e),
                C.footer(""),
                this.element = $(".map"),
                C.contentElement.append(this.element),
                C.icon("map-marker"),
                C.iconElement.attr("class", "dialog-icon glyphicon glyphicon-map-marker")
            },
            hide: function() {
                this.element.remove(),
                0 == $(".map-panel").children().length && this.element.appendTo(".map-panel")
            },
            close: function() {
                this.hide()
            }
        }
    };
    function j(e) {
        var t;
        return e ? (t = [],
        1e4 <= e && (t.push(parseInt(e / 1e4) + "两<hiy>黄金</hiy>"),
        e %= 1e4),
        100 < e && (t.push(parseInt(e / 100) + "两<wht>白银</wht>"),
        e %= 100),
        0 < e && t.push(e + "个<yel>铜板</yel>"),
        t.join("")) : ""
    }
    C.skills = {
        isShow: !1,
        selectItem: ".dialog-skills",
        hide: function() {
            if (this.skill_element)
                return this.skill_element.remove(),
                this.skill_element = null,
                this.element.removeClass("hide-item"),
                !1
        },
        close: function() {
            this.hide(),
            this.element.remove(),
            this.isShow = !1
        },
        level_desc: ["wht", "nor", "hic", "HIJ", "HIZ", "hio"],
        limit: 0,
        selected_item: 0,
        showdesc: function(e) {
            this.skill_element = $("<pre></pre>").html(e.desc).appendTo(this.element),
            this.element.addClass("hide-item")
        },
        footerChanged: function(e) {
            e != this.selected_item && (0 == (this.selected_item = e) ? this.element.removeClass("spskill") : this.element.addClass("spskill"))
        },
        create_footer: function() {
            for (var e = ["基础", "特殊"], t = [], s = 0; s < e.length; s++)
                t.push("<span class='footer-item" + (s == this.selected_item ? " select" : "") + "' for='" + s + "''>" + e[s] + "</span>");
            t.push("<span class='obj-money'>你目前的技能上限为<HIC>" + this.limit + "</HIC>级</span>"),
            C.footer(t.join(""))
        },
        updateSkill: function(e) {
            if (this.skills) {
                var t, s = this.skills[e.id];
                if (!s)
                    return this.addSkill(s);
                e.name && (s.name = e.name),
                e.enable ? (s.enable_skill && (t = s.enable_skill,
                s.enable_skill = null,
                this.skills[t][e.id] = !1,
                this.updateSkillItem(this.skills[t])),
                this.skills[e.enable][e.id] = !0,
                s.enable_skill = e.enable,
                this.updateSkillItem(this.skills[e.enable]),
                this.updateSkillItem(this.skills[e.id])) : null != e.exp || null != e.level ? (e.level && (s.level = e.level),
                e.exp && (s.exp = e.exp),
                e.can_enables && (s.can_enables = e.can_enables),
                this.updateSkillItem(s)) : 0 == e.enable && s.enable_skill && (t = s.enable_skill,
                this.skills[t][e.id] = !1,
                s.enable_skill = null,
                this.updateSkillItem(this.skills[t]),
                this.updateSkillItem(this.skills[e.id]))
            }
        },
        updateSkillItem: function(e) {
            var t = this.element.find(".skill-item[skid='" + e.id + "']");
            t && t.replaceWith(this.createSkillItem(e))
        },
        addSkill: function(e) {
            if (this.items && e) {
                if (this.skills[e.id])
                    return this.updateSkill(e);
                this.items.push(e),
                this.skills[e.id] = e,
                this.items = this.sort_items(this.items),
                this.createSkillItems(this.items)
            }
        },
        onData: function(e) {
            if (e) {
                if (!this.isShow && C.master.isShow && null == e.exp && !e.item)
                    return C.master.onData(e);
                if (e.item)
                    return this.addSkill(e.item);
                if (e.id)
                    return this.updateSkill(e);
                if (e.desc)
                    return this.showdesc(e);
                if (e.remove && this.items) {
                    this.items.Remove(this.skills[e.remove]);
                    this.skills[e.remove];
                    for (var t = 0; t < this.items.length; t++)
                        this.items[t].enable_skill == e.remove && (this.items[t].enable_skill = null);
                    return delete this.skills[e.remove],
                    this.createSkillItems(this.items)
                }
                if (e.items) {
                    this.title = e.title,
                    C.title(this.title),
                    C.icon("book"),
                    this.items = this.sort_items(e.items),
                    this.skills = {};
                    for (t = 0; t < this.items.length; t++) {
                        var s = this.items[t];
                        this.skills[s.id] = s
                    }
                    this.createSkillItems(this.items)
                }
                e.limit && (this.limit = e.limit,
                this.create_footer())
            }
        },
        show: function() {
            this.isShow || (this.isShow = !0,
            this.element || (this.element = $('<div class="dialog-skills"></div >')),
            this.element.on("click", ".skill-item", C.skills.item_click),
            this.element.appendTo(C.contentElement),
            this.element.removeClass("hide-item"),
            this.items ? (r("cha none"),
            C.title(this.title),
            C.icon("book"),
            this.create_footer()) : r("cha"))
        },
        isEnable: function(e, t) {
            if (e.can_enables)
                for (var s = 0; s < e.can_enables.length; s++) {
                    var i = t[e.can_enables[s]];
                    if (i && i.enable_skill == e.id)
                        return !0
                }
            return !1
        },
        createSkillItem: function(e, t) {
            t = t || this.skills;
            var s = []
              , i = (s.push(' <div class="skill-item'),
            this.master || (e.can_enables ? s.push(" skill") : s.push(" base")),
            this.isEnable(e, t));
            return i && s.push(" enable"),
            s.push('" skid="' + e.id + '">'),
            s.push(i ? e.name.replace(">", ">✔") : e.name),
            e.enable_skill && t && ((i = t[e.enable_skill]) && (s.push('<span class="enable_skill">已装备：'),
            s.push(i.name),
            s.push("</span>"))),
            s.push('<span class="skill-level">'),
            s.push(e.level),
            s.push("级 / "),
            s.push(e.exp),
            s.push("%"),
            s.push("&nbsp;"),
            s.push(C.skills.get_lvdesc(e.level)),
            s.push("</span></div>"),
            s.join("")
        },
        sort_items: function(e) {
            if (!e || !T.auto_sortitem)
                return e;
            for (var t = [], s = 0; s < e.length; s++) {
                var i = e[s]
                  , n = !1;
                i.s_index || (i.s_index = C.pack.get_index(i));
                for (var o = 0; o < t.length; o++)
                    if (i.s_index > t[o].s_index) {
                        t.splice(o, 0, i),
                        n = !0;
                        break
                    }
                n || t.push(i)
            }
            return t
        },
        createSkillItems: function(e, t) {
            for (var s = [], i = 0; i < e.length; i++)
                s.push(this.createSkillItem(e[i], t));
            this.element.html(s.join(""))
        },
        level_color: ["wht", "hig", "hic", "hij", "hiz", "hio"],
        get_lvdesc: function(e) {
            return e < 1e3 ? C.skills.skill_levels[parseInt(e / 50)] : (e = parseInt((e - 1e3) / 500),
            C.skills.skill_levels[(e = 6 < e ? 6 : e) + 20])
        },
        skill_levels: ["<BLU>初学乍练</BLU>", "<BLU>不知所以</BLU>", "<HIB>粗通皮毛</HIB>", "<HIB>渐有所悟</HIB>", "<YEL>半生不熟</YEL>", "<YEL>马马虎虎</YEL>", "<HIY>平淡无奇</HIY>", "<HIY>触类旁通</HIY>", "<HIG>心领神会</HIG>", "<HIG>挥洒自如</HIG>", "<HIC>驾轻就熟</HIC>", "<HIC>出类拔萃</HIC>", "<CYN>初入佳境</CYN>", "<CYN>神乎其技</CYN>", "<MAG>威不可当</MAG>", "<HIW>豁然贯通</HIW>", "<HIW>超群绝伦</HIW>", "<RED>登峰造极</RED>", "<WHT>登堂入室</WHT>", "<HIM>一代宗师</HIM>", "<WHT>超凡入圣</WHT>", "<HIO>出神入化</HIO>", "<HIO>独步天下</HIO>", "<HIR>空前绝后</HIR>", "<HIR>旷古绝伦</HIR>", "<HIW>深不可测</HIW>", "<HIW>返璞归真</HIW>"],
        item_click: function() {
            var e, t = $(this), s = ["<div class='item-commands'>"], i = C.skills.skills[t.attr("skid")];
            if (i) {
                if (s.push('<span cmd="checkskill ' + i.id + '">查看详细</span>'),
                i.can_enables)
                    for (var n = 0; n < i.can_enables.length; n++) {
                        var o = C.skills.skills[i.can_enables[n]];
                        o && (o.enable_skill != i.id ? s.push('<span cmd="enable ' + o.id + " " + i.id + '">装备' + o.name + "</span>") : s.push('<span cmd="enable ' + o.id + ' none">取消装备' + o.name + "</span>"))
                    }
                i.enable_skill && ((e = C.skills.skills[i.enable_skill]) ? s.push('<span cmd="enable ' + i.id + ' none">取消装备' + e.name + "</span>") : i.enable_skill = null),
                s.push('<span cmd="_confirm fangqi ' + i.id + '">遗忘</span>'),
                s.push('<span cmd="lianxi ' + i.id + '">练习</span>'),
                s.push("</div>"),
                C.skills.element.find(".item-commands").remove(),
                $(s.join("")).appendTo(t)
            }
        }
    },
    C.master = {
        isShow: !1,
        hide: function() {
            if (this.skill_element)
                return this.skill_element.remove(),
                this.skill_element = null,
                this.element.removeClass("hide-item"),
                !1;
            this.isShow = !1
        },
        close: C.skills.close,
        createSkillItems: C.skills.createSkillItems,
        createSkillItem: C.skills.createSkillItem,
        updateSkill: C.skills.updateSkill,
        updateSkillItem: C.skills.updateSkillItem,
        showdesc: C.skills.showdesc,
        isEnable: C.skills.isEnable,
        onData: function(e) {
            if (e.desc)
                return this.showdesc(e);
            if (e.id)
                return this.updateSkill(e);
            if (e.remove) {
                this.items.Remove(this.skills[e.remove]);
                this.skills[e.remove];
                for (var t = 0; t < this.items.length; t++)
                    this.items[t].enable_skill == e.remove && (this.items[t].enable_skill = null);
                return delete this.skills[e.remove],
                this.createSkillItems(this.items)
            }
            if (e.master || e.follower) {
                C.show("master"),
                this.master = e.master || e.follower,
                this.is_follower = !!e.follower;
                for (var s = {}, t = 0; t < e.items.length; t++) {
                    var i = e.items[t];
                    s[i.id] = i
                }
                this.skills = s,
                this.items = e.items,
                C.title(e.title),
                C.icon("book"),
                this.createSkillItems(e.items, s),
                e.limit && (this.is_follower ? C.footer("<span class='obj-money'>" + e.target + "目前的技能上限为<HIC>" + e.limit + "</HIC>级</span>") : C.footer("<span class='obj-money'>你目前的技能上限为<HIC>" + e.limit + "</HIC>级</span>"))
            }
        },
        show: function() {
            this.isShow || (this.element || (this.element = $('<div class="dialog-skills"></div >')),
            this.element.on("click", ".skill-item", this.item_click),
            this.element.appendTo(C.contentElement),
            this.element.removeClass("hide-item"),
            this.isShow = !0)
        },
        item_click: function() {
            var e = $(this)
              , t = C.master.skills[e.attr("skid")];
            if (t) {
                var s = ["<div class='item-commands'>"];
                if (s.push('<span cmd="checkskill ' + t.id + " " + C.master.master + '">查看详细</span>'),
                s.push('<span cmd="xue ' + e.attr("skid") + " from " + C.master.master + '">学习</span>'),
                C.master.is_follower) {
                    var i, n = "dc " + C.master.master;
                    if (s.push('<span cmd="_confirm ' + n + " fangqi " + e.attr("skid") + '">遗忘</span>'),
                    s.push('<span cmd="' + n + " lianxi " + e.attr("skid") + '">练习</span>'),
                    t.can_enables)
                        for (var o = 0; o < t.can_enables.length; o++) {
                            var a = C.master.skills[t.can_enables[o]];
                            a && (a.enable_skill != t.id ? s.push('<span cmd="' + n + " enable " + a.id + " " + t.id + '">装备' + a.name + "</span>") : s.push('<span cmd="' + n + " enable " + a.id + ' none">取消装备' + a.name + "</span>"))
                        }
                    t.enable_skill && ((i = C.master.skills[t.enable_skill]) ? s.push('<span cmd="' + n + " enable " + t.id + ' none">取消装备' + i.name + "</span>") : t.enable_skill = null)
                }
                s.push("</div>"),
                C.master.element.find(".item-commands").remove(),
                $(s.join("")).appendTo(e)
            }
        }
    },
    C.pack = {
        close: C.skills.close,
        hide: C.skills.hide,
        command_before: "",
        updateitem: function(e) {
            if (this.items) {
                if (null != e.money && (this.money = e.money,
                this.show_moeny()),
                null != e.eq) {
                    for (var t = 0; t < this.items.length; t++)
                        if (this.items[t].id == e.id) {
                            this.eqs[e.eq] = this.items[t],
                            this.items.splice(t, 1);
                            break
                        }
                    return !0
                }
                var s, i, n, o;
                if (null != e.uneq)
                    return (o = this.eqs[e.uneq]).can_eq = 1,
                    o.count = 1,
                    this.items.push(o),
                    !(this.eqs[e.uneq] = null);
                if (e.jldesc)
                    return (s = []).push(e.jldesc),
                    s.push("<span class='item-commands'>"),
                    s.push('<span cmd="' + this.command_before + "jinglian " + e.id + ' ok">精炼</span>'),
                    s.push("</span>"),
                    this.show_sub(s.join("")),
                    !1;
                if (e.xqdesc) {
                    (s = []).push(e.xqdesc),
                    s.push("<span class='item-commands'>");
                    for (t = 0; t < e.stones.length; t++) {
                        var a = e.stones[t];
                        s.push('<span cmd="' + this.command_before + "xiangqian " + e.id + " " + a.id + '">镶嵌' + a.name + "</span><br/>")
                    }
                    return s.push("</span>"),
                    this.show_sub(s.join("")),
                    !1
                }
                if (e.desc)
                    return (s = []).push(e.desc),
                    s.push("<span class='item-commands'>"),
                    "eq" == (i = e.from) ? s.push('<span cmd="' + this.command_before + "uneq " + e.id + '">取消装备</span>') : "item" == i ? (n = this.get_item(e.id)) && this.create_item_command(n, s, e.commands) : "store" == i || "sj" == i ? s.push('<span cmd="_confirm qu ' + e.id + '">取出</span>') : s.push('<span cmd="_confirm buy ' + e.id + " from " + C.list.seller + '">购买</span>'),
                    s.push("</span>"),
                    this.show_sub(s.join("")),
                    !1;
                if (e.remove) {
                    for (var l = this.items, t = 0; t < l.length; t++)
                        if (l[t].id == e.id) {
                            e.remove >= l[t].count ? (l.splice(t, 1),
                            I.DisObj(e)) : l[t].count -= e.remove;
                            break
                        }
                    return !0
                }
                return e.name ? ((o = this.get_item(e.id)) ? (o.count = e.count,
                o.name = e.name) : this.items.push(e),
                !0) : !!e.max_item_count && (this.max_count = e.max_item_count,
                k((C.pack2.isShow ? C.pack2.target_name : "你") + "的背包容量扩充为" + this.max_count + "。"),
                !0)
            }
        },
        get_item: function(e, t) {
            if (t = t || this.items)
                for (var s = 0; s < t.length; s++)
                    if (t[s] && t[s].id == e)
                        return t[s]
        },
        show_sub: function(e) {
            this.objelement && this.objelement.remove();
            var t = this.packElement;
            C.list.isShow && (t = C.list.rightElement),
            this.objelement = $("<pre class='obj-desc'>" + e + "</pre>").appendTo(t.parent()).on("click", function() {
                this.objelement.remove(),
                this.objelement = null,
                t.show()
            }
            .bind(this)),
            t.hide()
        },
        onData: function(e) {
            if (e) {
                if (e.items)
                    this.eqs = e.eqs || [],
                    this.money = e.money,
                    this.items = e.items,
                    this.max_count = e.max_item_count;
                else {
                    if (C.pack2.isShow && !e.name)
                        return C.pack2.onData(e);
                    if (0 == this.updateitem(e))
                        return
                }
                this.isShow ? (this.show_items(),
                this.show_moeny()) : (C.list.isShow && C.list.update_pack(e),
                C.trade.isShow && C.trade.update_pack(e))
            }
        },
        show_moeny: function() {
            this.isShow && (this.money ? C.footer("<div class='obj-money'>" + j(this.money)) : C.footer("<div class='obj-money'>" + (this.target_name || "你") + "身上没有任何银两</div>"))
        },
        show_items: function() {
            this.createItems(),
            this.create_eqs(),
            C.icon("briefcase");
            var e = this.target_name || "你";
            C.title(this.items && this.items.length ? e + "身上共有" + this.items.length + "/" + this.max_count + "件物品" : e + "身上没有任何东西")
        },
        init_element: function() {
            this.element || (this.element = $('<div class="dialog-pack"><div class="eq-list"><div class="eq-item"><span class="eq-type">武器</span><span class="eq-name"></span></div><div class="eq-item"><span class="eq-type">衣服</span><span class="eq-name"></span></div > <div class="eq-item"><span class="eq-type">鞋</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">头部</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">披风</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">戒指</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">项链</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">饰品</span><span class="eq-name"></span></div> <div class="eq-item"><span class="eq-type">护腕</span><span class="eq-name"></span></div><div class="eq-item"><span class="eq-type">腰带</span><span class="eq-name"></span></div><div class="eq-item"><span class="eq-type">暗器</span><span class="eq-name"></span></div></div><div class="obj-list"></div></div>'),
            this.packElement = this.element.find(".obj-list"),
            this.eqElement = this.element.find(".eq-list"))
        },
        show: function() {
            if (C.isShow || C.show(),
            this.objelement && (this.objelement.remove(),
            this.objelement = null,
            this.packElement && this.packElement.show()),
            this.isShow)
                return r(this.items ? "pack none" : "pack");
            this.isShow = !0,
            this.init_element(),
            this.packElement.on("click", ".obj-item", C.pack.item_click),
            this.eqElement.on("click", ".eq-item", C.pack.eqitem_click),
            this.element.appendTo(C.contentElement),
            this.items ? (r("pack none"),
            this.show_items()) : r("pack")
        },
        create_eqs: function() {
            for (var e = this.eqElement.find(".eq-item>.eq-name"), t = 0; t < e.length; t++) {
                var s = this.eqs[t];
                $(e[t]).attr("oindex", t),
                s ? $(e[t]).html(s.name) : $(e[t]).html("")
            }
        },
        levels: {
            wht: 0,
            hig: 1,
            hic: 2,
            hiy: 3,
            hiz: 4,
            hio: 5,
            ord: 6
        },
        get_index: function(e) {
            e = e.name.substr(1, 3).toLowerCase();
            return this.levels[e] + 1
        },
        sort_items: function(e) {
            if (!e || !T.auto_sortitem)
                return e;
            for (var t = [], s = 0; s < e.length; s++) {
                var i = e[s]
                  , n = !1;
                i.s_index || (i.s_index = this.get_index(i));
                for (var o = 0; o < t.length; o++)
                    if (i.s_index < t[o].s_index) {
                        t.splice(o, 0, i),
                        n = !0;
                        break
                    }
                n || t.push(i)
            }
            return t
        },
        createItems: function() {
            if (this.items) {
                for (var e = C.pack.sort_items(this.items), t = [], s = 0; s < this.max_count; s++) {
                    var i = e[s];
                    t.push('<div class="obj-item" oindex="'),
                    t.push(i ? i.id : ""),
                    t.push('">'),
                    i && (t.push(i.name),
                    1 == this.show_type ? (t.push("<span class='obj-value'>"),
                    t.push("每"),
                    t.push(i.unit),
                    t.push(j(i.value)),
                    t.push("："),
                    t.push(i.count),
                    t.push(i.unit),
                    t.push("</span>")) : 1 < i.count && (t.push("<span class='obj-value'>"),
                    t.push(i.count),
                    t.push(i.unit),
                    t.push("</span>"))),
                    t.push("</div>")
                }
                this.packElement.html(t.join(""))
            }
        },
        create_item_command: function(e, t, s) {
            if (t.push('<span cmd="_confirm ' + this.command_before + "drop " + e.count + " " + e.id + '">丢掉</span>'),
            e.can_eq && (t.push('<span cmd="' + this.command_before + "eq " + e.id + '">装备</span>'),
            this.command_before || (t.push('<span cmd="jinglian ' + e.id + '">精炼</span>'),
            t.push('<span cmd="xiangqian ' + e.id + '">镶嵌</span>'),
            t.push('<span cmd="shortcut ' + e.id + '">设置快速装备</span>')),
            t.push('<span cmd="_confirm ' + this.command_before + "fenjie " + e.id + '">分解</span>')),
            e.can_use && (t.push('<span cmd="' + this.command_before + "use " + e.id + '">使用</span>'),
            e.can_eq || this.command_before || t.push('<span cmd="shortcut ' + e.id + '">设置快速使用</span>')),
            e.can_open && t.push('<span cmd="' + this.command_before + "open " + e.id + '">打开</span>'),
            e.can_study && t.push('<span cmd="' + this.command_before + "study " + e.id + '">学习</span>'),
            e.can_combine && e.count >= e.can_combine && t.push('<span cmd="_confirm ' + this.command_before + "combine " + e.id + " " + e.can_combine + '">合成</span>'),
            this.command_before && t.push('<span cmd="_confirm ' + this.command_before + "give " + S.player + " " + e.count + " " + e.id + '">拿来</span>'),
            s)
                for (var i = 0; i < s.length; i++)
                    t.push('<span cmd="packitem ' + s[i].cmd + " " + e.id + '">' + s[i].name + "</span>")
        },
        item_click: function() {
            var e, t = $(this), s = t.attr("oindex");
            s && (s = C.pack.get_item(s),
            C.pack.element.find(".item-commands").remove(),
            s && ((e = ["<span class='item-commands'>"]).push('<span cmd="checkobj ' + s.id + ' from item">查看</span>'),
            C.pack.create_item_command(s, e),
            e.push("</span>"),
            $(e.join("")).appendTo(t)))
        },
        eqitem_click: function() {
            var e = $(this).find(".eq-name")
              , e = C.pack.eqs[e.attr("oindex")];
            e && r("checkobj " + e.id + " from eq")
        }
    },
    C.pack2 = {
        onData: function(e) {
            if (this.show(),
            e.items)
                this.eqs = e.eqs || [],
                this.money = e.money,
                this.id = e.id,
                this.command_before = "dc " + this.id + " ",
                this.items = e.items,
                this.target_name = e.name,
                this.max_count = e.max_item_count;
            else if (0 == this.updateitem(e))
                return;
            this.show_items(),
            this.show_moeny()
        },
        createItems: C.pack.createItems,
        create_eqs: C.pack.create_eqs,
        init_element: C.pack.init_element,
        show_items: C.pack.show_items,
        updateitem: C.pack.updateitem,
        show_moeny: C.pack.show_moeny,
        show_sub: C.pack.show_sub,
        close: C.skills.close,
        hide: function() {
            this.element.remove(),
            this.isShow = !1
        },
        get_item: C.pack.get_item,
        create_item_command: C.pack.create_item_command,
        show: function() {
            C.isShow || C.show("pack2"),
            this.objelement && (this.objelement.remove(),
            this.objelement = null,
            this.packElement && this.packElement.show()),
            this.isShow || (this.isShow = !0,
            this.init_element(),
            this.packElement.on("click", ".obj-item", this.item_click),
            this.eqElement.on("click", ".eq-item", this.eqitem_click),
            this.element.appendTo(C.contentElement))
        },
        item_click: function() {
            var e, t = $(this), s = t.attr("oindex");
            s && (s = C.pack2.get_item(s),
            C.pack2.element.find(".item-commands").remove(),
            s && ((e = ["<span class='item-commands'>"]).push('<span cmd="' + C.pack2.command_before + " checkobj " + s.id + ' from item">查看</span>'),
            C.pack2.create_item_command(s, e),
            e.push("</span>"),
            $(e.join("")).appendTo(t)))
        },
        eqitem_click: function() {
            var e = $(this).find(".eq-name")
              , e = C.pack2.eqs[e.attr("oindex")];
            e && r(C.pack2.command_before + " checkobj " + e.id + " from eq")
        }
    },
    C.trade = {
        hide: function() {
            this.element.remove(),
            this.isShow = !1
        },
        close: function() {
            this.hide()
        },
        onData: function(e) {
            this.isShow || C.show("trade"),
            C.title("和" + e.name + "交易中");
            C.pack.items;
            this.trade_target = e.target,
            this.trade_list.length = 0,
            C.pack.items ? this.update_pack() : r("pack"),
            C.pack.isShow = !1,
            this.create_items(this.leftElement.empty(), this.trade_list, this.max_count)
        },
        update_pack: function(e) {
            this.create_items(this.rightElement.empty(), C.pack.items, C.pack.max_count)
        },
        max_count: 10,
        trade_list: [],
        show: function(e) {
            this.isShow || (C.init(),
            C.curItem = "trade",
            this.element || (this.element = $('<div class="dialog-list"><div class="obj-list"></div><div class="obj-list"></div></div >'),
            this.leftElement = $(this.element.children()[0]),
            this.rightElement = $(this.element.children()[1])),
            this.leftElement.on("click", ".obj-item", this.left_click),
            this.rightElement.on("click", ".obj-item", this.right_click),
            this.element.appendTo(C.contentElement.empty()),
            this.create_footer(),
            this.isShow = !0)
        },
        create_footer: function() {
            var e = [];
            e.push("<span class='footer-item trade_btn ok' for='1''>确定</span>"),
            e.push("<span class='footer-item  trade_btn' for='0''>取消</span>"),
            C.footer(e.join(""))
        },
        footerChanged: function(e) {
            if ((e = parseInt(e)) && this.trade_list.length)
                for (e = 0; e < this.trade_list.length; e++)
                    r("give " + this.trade_target + " " + this.trade_list[e].count + " " + this.trade_list[e].id);
            C.hide()
        },
        create_items: function(e, t, s) {
            var i = [];
            t = C.pack.sort_items(t);
            for (var n = 0; n < s; n++) {
                var o = t[n];
                i.push('<div class="obj-item" oindex="'),
                i.push(o ? o.id : ""),
                i.push('"'),
                o ? (i.push(" oid='" + o.id + "'>"),
                i.push(o.name),
                1 < o.count && (i.push("<span class='obj-value'>"),
                i.push(o.count),
                i.push(o.unit),
                i.push("</span>"))) : i.push("'>"),
                i.push("</div>")
            }
            e.html(i.join(""))
        },
        left_click: function() {
            var e = $(this).attr("oindex");
            if (e) {
                for (var t = null, s = 0; s < C.trade.trade_list.length; s++)
                    if (C.trade.trade_list[s].id == e) {
                        t = C.trade.trade_list[s];
                        break
                    }
                if (t)
                    return C.trade.cancle_trade(t),
                    !1
            }
        },
        enable_item: function(e, t) {
            e = this.rightElement.find(".obj-item[oid='" + e.id + "']");
            e.length && (t ? e.removeClass("disabled") : e.addClass("disabled"))
        },
        right_click: function() {
            var e = $(this);
            if (!e.is(".disabled")) {
                e = e.attr("oindex");
                if (e) {
                    e = C.pack.get_item(e);
                    if (e)
                        return 1 < e.count ? P.Show_trade_add(e) : C.trade.add_trade(e),
                        !1
                }
            }
        },
        add_trade: function(e) {
            for (var t = 0; t < this.trade_list.length; t++)
                if (e.id == this.trade_list[t].id)
                    return this.trade_list[t].count += e.count,
                    this.create_items();
            this.trade_list.push(e),
            this.create_items(this.leftElement.empty(), this.trade_list, this.max_count),
            this.enable_item(e, !1)
        },
        cancle_trade: function(e) {
            for (var t = 0; t < this.trade_list.length; t++)
                e.id == this.trade_list[t].id && (this.trade_list.splice(t, 1),
                t--);
            this.create_items(this.leftElement.empty(), this.trade_list, this.max_count),
            this.enable_item(e, !0)
        }
    },
    C.list = {
        hide: function() {
            this.element.remove(),
            this.isShow = !1
        },
        close: function() {
            this.hide()
        },
        level_desc: ["wht", "nor", "hic", "hiy", "him", "hio", "ord"],
        updateitem: function(e) {
            if (e.store) {
                var t = this.find_item(1, e.id)
                  , s = this.find_item(3, e.storeid);
                t ? t.count -= e.store : ((t = $.extend({}, s)).id = e.id,
                t.count = -e.store,
                C.pack.items.push(t)),
                s ? s.count += e.store : ((s = $.extend({}, t)).id = e.storeid,
                s.count = e.store,
                this.stores.push(s)),
                0 == s.count && this.stores.Remove(s),
                0 == t.count && C.pack.items.Remove(t)
            } else if (e.sell)
                if (t = this.find_item(2, e.id))
                    return t.count -= e.sell,
                    this.create_items(this.selllist, this.leftElement, 2, this.selllist.length);
            this.isstore && (this.create_items(this.stores, this.leftElement, 3, this.max_store_count),
            C.title(this.is_bookshelf ? "你的书架上有" + this.stores.length + "/" + this.max_store_count + "本秘籍" : "你的仓库中有" + this.stores.length + "/" + this.max_store_count + "件物品")),
            this.update_pack(),
            null != e.money && this.show_footer(e.money)
        },
        find_item: function(e, t) {
            var s = C.pack.items;
            2 == e ? s = this.selllist : 3 == e && (s = this.stores);
            for (var i = 0; i < s.length; i++)
                if (s[i].id == t)
                    return s[i]
        },
        onData: function(e) {
            if (this.show(),
            e) {
                if (e.id)
                    return this.updateitem(e);
                var t = e.gongji || e.jungong || e.yaoyuan || e.canye;
                e.selllist && (this.isstore = !1,
                this.is_canye = !1,
                this.gongji = t,
                this.money_name = null,
                e.gongji ? this.money_name = "门派功绩" : e.jungong ? this.money_name = "军功" : e.yaoyuan ? this.money_name = "<ord>妖元</ord>" : e.canye && (this.money_name = "<hic>秘籍积分</hic>",
                this.is_canye = !0),
                this.selllist = e.selllist,
                this.create_items(e.selllist, this.leftElement, 2, e.selllist.length),
                C.titleElement.html(e.title),
                C.icon("shopping-cart")),
                e.stores && (this.isstore = !0,
                this.is_canye = !1,
                this.create_items(e.stores, this.leftElement, 3, e.max_store_count),
                this.stores = e.stores,
                this.is_bookshelf = !!e.bookshelf,
                C.titleElement.html(this.is_bookshelf ? "你的书架上有" + e.stores.length + "/" + e.max_store_count + "本秘籍" : "你的仓库中有" + e.stores.length + "/" + e.max_store_count + "件物品"),
                this.max_store_count = e.max_store_count,
                C.icon("lock")),
                this.update_pack(),
                t && (this.gongji = t,
                this.show_footer(t)),
                e.seller && (this.seller = e.seller)
            }
        },
        show: function(e) {
            C.isShow && "list" == C.curItem || C.show("list"),
            this.rightElement && (this.rightElement.show(),
            C.pack.objelement && C.pack.objelement.remove()),
            this.isShow || (this.element || (this.element = $('<div class="dialog-list"><div class="obj-list"></div><div class="obj-list"></div></div >'),
            this.leftElement = $(this.element.children()[0]),
            this.rightElement = $(this.element.children()[1])),
            this.element.on("click", ".obj-item", C.list.item_click),
            this.element.appendTo(C.contentElement.empty()),
            this.isShow = !0)
        },
        show_footer: function(e) {
            e = 0 < (e = this.money_name ? this.gongji : e) ? this.money_name ? "你目前有" + e + "<hiy>" + this.money_name + "</hiy>" : "你身上有" + j(e) : this.money_name ? "你还没有<hiy>" + this.money_name + "</hiy>" : "你身上没有任何银两",
            C.footerElement.html("<div class='obj-money'>" + e + "<span cmd='sell all'>清理包裹</span></div>")
        },
        update_pack: function() {
            var e = C.pack.items;
            e ? (this.create_items(e, this.rightElement, 1, C.pack.max_count),
            this.show_footer(C.pack.money)) : r("pack")
        },
        show_sells: function(e) {
            return !!e && (void 0 === e.is_canye && (e.is_canye = 0 < e.name.indexOf("残页") && -1 === e.name.indexOf("武道") && -1 === e.name.indexOf("进阶")),
            e.is_canye)
        },
        canye_values: [0, 10, 11, 12, 14, 16, 20],
        desc_levels: {
            wht: 0,
            hig: 1,
            hic: 2,
            hiy: 3,
            hiz: 4,
            hio: 5,
            ord: 6
        },
        canye_value: function(e) {
            var t = e.name.substr(1, 3).toLowerCase()
              , t = this.desc_levels[t] || 0;
            return 0 < t ? "每" + e.unit + "<hic>" + this.canye_values[t] + "积分</hic>：" + e.count + e.unit : "不可出售"
        },
        create_items: function(e, t, s, i) {
            var n = []
              , o = e;
            1 !== s && 3 !== s || (o = C.pack.sort_items(e));
            for (var a = 0; a < i; a++) {
                var l = o[a];
                1 === s && this.is_canye && !this.show_sells(l) || (n.push('<div class="obj-item" '),
                l ? (n.push('obj="'),
                n.push(l.id),
                n.push('" otype="'),
                n.push(s),
                n.push('">'),
                n.push(l.name),
                n.push("<span class='obj-value'>"),
                2 == s ? (n.push("每"),
                n.push(l.unit),
                n.push(this.money_name ? l.value + "<hiy>" + this.money_name + "</hiy>" : j(l.value)),
                -1 == l.count ? n.push("：大量现货") : (n.push("：剩余"),
                n.push(l.count),
                n.push(l.unit))) : 1 !== s || this.isstore ? 1 < l.count && (n.push(l.count),
                n.push(l.unit)) : this.is_canye ? n.push(this.canye_value(l)) : l.value ? (n.push("每"),
                n.push(l.unit),
                n.push(j(l.value)),
                n.push("："),
                n.push(l.count),
                n.push(l.unit)) : n.push("不可出售"),
                n.push("</span>")) : n.push('">'),
                n.push("</div>"))
            }
            t.html(n.join(""))
        },
        item_click: function() {
            var e, t = $(this), s = t.attr("obj"), i = t.attr("otype"), n = C.list.find_item(i, s);
            n && (e = ["<div class='item-commands'>"],
            C.list.isstore ? 3 == i ? (e.push('<span cmd="checkobj ' + s + " from " + (C.list.is_bookshelf ? "sj" : "store") + '">查看</span>'),
            e.push('<span cmd="_confirm qu ' + s + '">取出</span>')) : 1 == i && (e.push('<span cmd="checkobj ' + s + ' from item">查看</span>'),
            C.list.is_bookshelf ? e.push('<span cmd="_confirm store ' + n.count + " " + s + '">放到书架</span>') : e.push('<span cmd="_confirm store ' + n.count + " " + s + '">存到仓库</span>')) : 2 == i ? (e.push('<span cmd="checkobj ' + s + " from " + C.list.seller + '">查看</span>'),
            n.count && e.push('<span cmd="_confirm buy ' + n.count + " " + s + " from " + C.list.seller + '">购买</span>')) : 1 == i && (e.push('<span cmd="checkobj ' + s + ' from item">查看</span>'),
            e.push('<span cmd="_confirm sell ' + n.count + " " + s + " to " + C.list.seller + '">卖掉</span>')),
            e.push("</div>"),
            C.list.element.find(".item-commands").remove(),
            $(e.join("")).appendTo(t))
        }
    },
    C.channel = {
        footer: [["全部", ""], ["世界", "chat"], ["队伍", "tm"], ["门派", "fam"], ["全区", "es"], ["帮派", "pty"], ["系统", "sys"]],
        isScroll: !0,
        last_click: 0,
        show: function() {
            if (500 < Date.now() - this.last_click)
                this.last_click = Date.now();
            else if (!C.channel.isShow) {
                C.select("channel"),
                C.icon("comment"),
                C.title(""),
                C.footer("");
                for (var e = 0; e < C.channel.footer.length; e++) {
                    var t = $("<span class='footer-item channel-item' for='" + C.channel.footer[e][1] + "'>" + C.channel.footer[e][0] + "</span>").appendTo(C.footerElement);
                    0 == e && t.addClass("select")
                }
                C.contentElement.html("").append(S.ChannelElement.addClass("channel-dialog")),
                C.channel.isShow = !0,
                C.channel.scrollBottom()
            }
        },
        hide: function() {
            C.channel.footerChanged(""),
            S.ChannelElement.removeClass("channel-dialog").insertBefore(p),
            this.scrollBottom(),
            this.isShow = !1
        },
        close: function() {
            this.hide()
        },
        scrollBottom: function() {
            C.channel.isScroll && (S.ChannelElement[0].scrollTop = 999999)
        },
        isBottom: function() {
            return !0
        },
        endScroll: function() {
            C.channel.isScroll = !1
        },
        beginScroll: function() {
            C.channel.isScroll = !0
        },
        footerChanged: function(e) {
            if (C.channel.select_item != e) {
                C.channel.select_item = e;
                for (var t = [], s = 0; s < this.datas.length; s++) {
                    var i = this.datas[s];
                    e && i[0] != e || t.push(i[1])
                }
                S.ChannelPro.html(t.join("")),
                this.scrollBottom()
            }
        },
        datas: [],
        createElement: function(e, t) {
            var s = "hic"
              , i = "";
            switch (e.ch) {
            case "tm":
                s = "hig",
                i = "队伍";
                break;
            case "fam":
                s = "hiy",
                i = e.fam || "门派";
                break;
            case "rumor":
                s = "him",
                i = "谣言",
                e.name = "某人";
                break;
            case "sys":
                s = "hir",
                i = "系统",
                e.name = "";
                break;
            case "es":
                s = "hio",
                i = e.server,
                e.uid = null;
                break;
            case "pty":
                s = "hiz",
                i = "帮派";
                break;
            default:
                i = ["闲聊", "闲聊", "闲聊", "<hiy>宗师</hiy>", "<HIZ>武圣</HIZ>", "<hio>武帝</hio>", "<ord>武神</ord>"][e.lv],
                e.lv6 && (i = ["<ord>武神</ord>", "<ord>剑神</ord>", "<ord>刀皇</ord>", "<ord>兵主</ord>", "<ord>战神</ord>"][e.lv6])
            }
            var n = ["<", s, ">【"]
              , t = (n.push(i),
            n.push("】"),
            e.name && (n.push("<span"),
            e.uid && n.push(" cmd='look3 " + e.uid + "'"),
            n.push(">"),
            n.push(e.name),
            n.push("</span>：")),
            n.push(e.content),
            t && n.push("\n"),
            n.join(""));
            return 500 < this.datas.length && (this.datas.length = 0),
            "rumor" == e.ch && (e.ch = "sys"),
            this.datas.push([e.ch, t]),
            this.select_item && this.select_item != e.ch ? "" : t
        }
    },
    C.setting = {
        footer: [["显示", "setting"], ["帮助", "help"], ["<yel>高级</yel>", "custom"]],
        selectitem: null,
        init: function() {
            if (!this.settingElement) {
                this.settingElement = $(".dialog-setting"),
                this.gamesettingElement = $(".dialog-gamesetting"),
                this.helpElement = $(".dialog-help"),
                this.customElement = $(".dialog-custom");
                for (var e = $(".setting>.setting-item"), t = 0; t < e.length; t++) {
                    var s = $(e[t])
                      , i = s.attr("for");
                    if (i) {
                        var n = T[i];
                        switch (i) {
                        case "fontsize":
                            this.select_color(s.find(".color-item"), n, "fontSize");
                            break;
                        case "font":
                            this.select_color(s.find(".color-item"), n, "fontFamily");
                            break;
                        case "fontcolor":
                        case "backcolor":
                            this.select_color(s.find(".color-item"), n, "backgroundColor");
                            break;
                        case "auto_pfm":
                        case "auto_pfm2":
                            n && (s.find(".switch ").addClass("on"),
                            s.find(".switch-text").html("开"),
                            $("#" + i).show().val(n));
                            break;
                        case "auto_work":
                            n && (s.find(".switch ").addClass("on"),
                            s.find(".switch-text").html("开"),
                            $("#" + i).show().val(1 != n ? n : ""));
                            break;
                        default:
                            1 == n && (s.find(".switch ").addClass("on"),
                            s.find(".switch-text").html("开"))
                        }
                    }
                }
            }
        },
        show: function() {
            if (this.init(),
            !this.isShow) {
                this.footerChanged("setting"),
                C.icon("cog"),
                C.title("设置"),
                C.footerElement.empty();
                for (var e = 0; e < this.footer.length; e++) {
                    var t = $("<span class='footer-item' for='" + this.footer[e][1] + "'>" + this.footer[e][0] + "</span>").appendTo(C.footerElement);
                    0 == e && t.addClass("select")
                }
                this.isShow = !0
            }
        },
        select_color: function(e, t, s) {
            for (var i = 0; i < e.length; i++)
                e[i].style[s] == t ? $(e[i]).addClass("select") : $(e[i]).removeClass("select")
        },
        footerChanged: function(e) {
            this.selectitem && this.selectitem.remove(),
            this.selectitem = this[e + "Element"],
            "setting" == e ? (this.selectitem.on("click", ".switch", this.switchClick),
            this.selectitem.on("click", ".color-item", this.colorClick)) : "custom" == e ? (this.selectitem.on("click", ".switch", this.switchClick),
            this.selectitem.on("click", ".setting-ok", this.save_custom)) : this.selectitem.on("click", ".help-item", this.helpClick),
            this.selectitem.appendTo(C.contentElement)
        },
        helpClick: function() {
            var e = $(this).attr("action");
            switch (e) {
            case "tologin":
                break;
            case "torole":
                i.Close(),
                HideAndShow("#role_panel", function() {
                    S.player = null,
                    S.clear()
                });
                break;
            case "toserver":
                S.player = null,
                i.Close();
                break;
            default:
                C.setting.show_help(e)
            }
        },
        show_help: function(e) {
            M.Get("doc/" + e + ".html", function(e) {
                e && (this.frame = $("<div class='help-content'>" + e + "</div>").appendTo(this.selectitem))
            }
            .bind(this)),
            this.selectitem.addClass("help-detl")
        },
        close_help: function() {
            this.frame && (this.frame.remove(),
            this.selectitem.removeClass("help-detl"),
            this.frame = null)
        },
        hide: function() {
            if (this.frame)
                return this.close_help(),
                !1;
            this.close()
        },
        close: function() {
            this.close_help(),
            this.selectitem.remove(),
            this.isShow = !1
        },
        save_custom: function() {
            if ($(".dialog-custom>.setting-item[for='auto_pfm']>.switch").is(".on")) {
                if (!(e = $("#auto_pfm").val()))
                    return k("<hir>你没有设置自动出招的绝招。</hir>");
                if (300 < e.length)
                    return k("<hir>你设置的出招过长。</hir>");
                T.save("auto_pfm", e)
            }
            if ($(".dialog-custom>.setting-item[for='auto_pfm2']>.switch").is(".on")) {
                if (!(e = $("#auto_pfm2").val()))
                    return k("<hir>你没有设置自动反击的绝招。</hir>");
                if (300 < e.length)
                    return k("<hir>你设置的出招过长。</hir>");
                T.save("auto_pfm2", e)
            }
            if ($(".dialog-custom>.setting-item[for='auto_work']>.switch").is(".on")) {
                var e;
                if ((e = $("#auto_work").val()) && 400 < e.length)
                    return k("<hir>你设置的过长。</hir>");
                T.save("auto_work", e || 1)
            }
            k("<hic>设置已保存。</hic>")
        },
        get_pfms: function(e) {
            if (!I.Skills)
                return k("<hir>你没有可用的绝招设置。</hir>");
            for (var t = [], s = 0; s < I.Skills.length; s++)
                0 < t.length && t.push(","),
                t.push(I.Skills[s].id);
            $("#" + e).val(t.join("")),
            k("已预设置为你默认的绝招(未保存)，你可以修改为适合你的出招顺序后点击保存")
        },
        switchClick: function(e) {
            var t = $(this)
              , s = t.parent().attr("for")
              , i = 0;
            switch (t.is(".on") ? (t.removeClass("on"),
            t.find(".switch-text").html("关")) : (t.addClass("on"),
            t.find(".switch-text").html("开"),
            i = 1),
            s) {
            case "auto_pfm":
            case "auto_pfm2":
                i ? ($("#" + s).show(),
                C.setting.get_pfms(s),
                T[s] = 0) : ($("#" + s).hide(),
                T.save(s, 0));
                break;
            case "auto_work":
                i ? $("#" + s).show() : ($("#" + s).hide(),
                T.save(s, 0));
                break;
            default:
                T.save(s, i)
            }
            return !(e.cancelable = !0)
        },
        colorClick: function() {
            var e = $(this);
            if (!e.is(".select")) {
                var t = e.parent()
                  , t = (t.children().removeClass("select"),
                e.addClass("select"),
                t.closest(".setting-item").attr("for"));
                if (t) {
                    var s = "";
                    switch (t) {
                    case "fontsize":
                        s = e[0].style.fontSize;
                        break;
                    case "fontcolor":
                    case "backcolor":
                        s = e[0].style.backgroundColor;
                        break;
                    case "font":
                        s = (s = e[0].style.fontFamily) || "none"
                    }
                    T.save(t, s)
                }
            }
        }
    },
    C.tasks = {
        close: function() {
            this.element.remove(),
            this.isShow = !1
        },
        update_item: function(e) {
            for (var t = 0; t < this.items.length; t++)
                if (this.items[t].id == e.id) {
                    e.state ? (this.items[t].title = e.title,
                    this.items[t].state = e.state,
                    this.items[t].desc = e.desc) : this.items.splice(t, 1);
                    break
                }
            this.create_items()
        },
        onData: function(e) {
            if (e.id)
                return this.update_item(e);
            C.title("任务列表"),
            C.icon("exclamation-sign"),
            this.items = e.items,
            this.create_items()
        },
        show: function() {
            this.element || (this.element = $("<div class='dialog-tasks'></div>")),
            r("tasks"),
            this.isShow || (this.element.appendTo(C.contentElement),
            C.footer(""),
            this.isShow = !0)
        },
        create_items: function() {
            for (var e = [], t = 0; t < this.items.length; t++) {
                var s = this.items[t];
                e.push("<div class='task-item'>"),
                e.push("<h3>"),
                e.push(t + 1),
                e.push("· "),
                e.push(s.title),
                e.push("</h3>"),
                e.push("<pre class='task-desc'>"),
                e.push(s.desc),
                e.push("</pre>"),
                e.push("<span"),
                1 == s.state ? (e.push(" class='task-btn start'>"),
                e.push("进行中")) : 2 == s.state ? (e.push(' cmd="taskover '),
                e.push(s.id),
                e.push('"'),
                e.push(" class='task-btn finish'>"),
                e.push("可领取")) : 3 == s.state && (e.push(" class='task-btn over'>"),
                e.push("已完成")),
                e.push("</span>"),
                e.push("</div>")
            }
            this.element.html(e.join(""))
        }
    },
    C.stats = {
        footers: [{
            cmd: "score",
            name: "综合榜"
        }, {
            cmd: "top",
            name: "高手榜"
        }, {
            cmd: "weapon",
            name: "兵器谱"
        }],
        selectedItem: 0,
        close: function() {
            this.element.remove(),
            this.isShow = !1
        },
        onData: function(e) {
            return e.close ? C.hide() : e.tops ? (e.top ? this.show_desc("你目前在第" + e.top + "名") : this.show_desc("你目前没有上榜"),
            this.create_tops(e.tops, e)) : e.weapons ? (this.show_desc(""),
            this.create_weapons(e.weapons)) : e.scores ? (this.show_desc("你目前的评分：" + e.score),
            this.create_scores(e.scores)) : void 0
        },
        create_scores: function(e, t) {
            for (var s = [], i = ["一　", "二　", "三　", "四　", "五　", "六　", "七　", "八　", "九　", "十　", "十一", "十二", "十三", "十四", "十五", "十六", "十七", "十八", "十九", "二十"], n = 0; n < i.length; n++)
                s.push("<div class='top-item scores top"),
                s.push(n + 1),
                s.push("' top='"),
                s.push(n + 1),
                s.push("'><span class='top-title'>"),
                s.push(i[n]),
                s.push("、</span>"),
                s.push("<span class='top-name'>"),
                s.push(e[n][0]),
                s.push("</span>"),
                s.push("<span class='top-sc'>"),
                s.push(e[n][1]),
                s.push("</span>"),
                s.push("</div>");
            this.element.html(s.join(""))
        },
        create_tops: function(e, t) {
            for (var s = [], i = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十"], n = 0; n < i.length; n++)
                s.push("<div class='top-item top top"),
                s.push(n + 1),
                s.push("' top='"),
                s.push(n + 1),
                s.push("'><span class='top-title'>"),
                s.push("天下第"),
                s.push(i[n]),
                s.push("</span>"),
                s.push("<span class='top-name'>"),
                s.push(e[n]),
                s.push("</span>"),
                s.push("</div>");
            this.element.html(s.join("")),
            this.top = t.top
        },
        create_weapons: function(e) {
            for (var t = [], s = ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十"], i = 0; i < s.length; i++)
                t.push("<div class='top-item weapon top"),
                t.push(i + 1),
                t.push("' top='"),
                t.push(i + 1),
                t.push("'><span class='top-title'>"),
                t.push(s[i]),
                t.push("、</span>"),
                t.push("<span class='top-name'>"),
                t.push(e[i]),
                t.push("</span>"),
                t.push("</div>");
            this.element.html(t.join(""))
        },
        show: function() {
            this.selectedItem || (this.selectedItem = this.footers[0]),
            r("stats " + this.selectedItem.cmd),
            this.element || (this.element = $("<div class='dialog-stats'></div>")),
            this.isShow || (this.create_footer(),
            C.icon("stats"),
            C.contentElement.html(this.element),
            this.element.on("click", ".top-item", this.itemClick),
            this.isShow = !0)
        },
        create_footer: function() {
            for (var e = [], t = 0; t < this.footers.length; t++) {
                var s = this.footers[t];
                e.push("<span class='footer-item" + (s == this.selectedItem ? " select" : "") + "' for='" + t + "''>" + s.name + "</span>")
            }
            e.push("<span class='stats-span'></span>"),
            C.footer(e.join(""))
        },
        show_desc: function(e) {
            C.footerElement.find(".stats-span").html(e)
        },
        footerChanged: function(e) {
            e = this.footers[e];
            e != this.selectedItem && (this.selectedItem = e,
            C.title(this.selectedItem.name),
            r("stats " + this.selectedItem.cmd))
        },
        itemClick: function() {
            var e = $(this)
              , t = parseInt(e.attr("top"))
              , s = e.is(".top")
              , i = e.is(".weapon")
              , n = ["<div class='item-commands'>"];
            s ? (n.push('<span cmd="look1 ' + t + '">查看</span>'),
            !C.stats.top || t < C.stats.top ? n.push('<span cmd="challenge ' + t + '">挑战</span>') : t == C.stats.top && n.push('<span cmd="stats copy">更新应战状态</span>'),
            n.push('<span cmd="reward top ' + t + '">查看奖励</span>')) : i ? (n.push('<span cmd="stats weapon ' + t + '">查看</span>'),
            n.push('<span cmd="reward weapon ' + t + '">查看奖励</span>')) : (n.push('<span cmd="stats score ' + t + '">查看</span>'),
            n.push('<span cmd="reward score ' + t + '">查看奖励</span>')),
            n.push("</div>"),
            C.stats.element.find(".item-commands").remove(),
            $(n.join("")).appendTo(e)
        }
    },
    C.jh = {
        unlock: 0,
        close: function() {
            this.element.remove(),
            this.isShow = !1
        },
        update_item: function(e) {
            for (var t = 0; t < this.items.length; t++)
                if (this.items[t].id == e.id) {
                    e.state ? (this.items[t].title = e.title,
                    this.items[t].state = e.state,
                    this.items[t].desc = e.desc) : this.items.splice(t, 1);
                    break
                }
            this.create_items()
        },
        onData: function(e) {
            if (e.close)
                return C.isShow && C.hide();
            if (e.desc) {
                var t;
                if ("fb" == e.t)
                    return (t = this.fbs[e.index]) ? (t.desc = e.desc,
                    t.reward = e.reward,
                    t.is_diffi = e.is_diffi,
                    t.is_multi = e.is_multi,
                    t.no_single = e.no_single,
                    this.show_fbdesc(t)) : void 0;
                if ("fam" == e.t)
                    return (t = this.families[e.index]) ? (t.desc = e.desc,
                    t.sp = e.sp,
                    t.skills = e.skills,
                    t.no_cache = e.no_cache,
                    t.iszc = e.iszc,
                    this.show_famdesc(t)) : void 0
            }
            e.unlock ? (this.unlock = e.unlock || 0,
            this.unlock >= this.fbs.length && (this.unlock = this.fbs.length - 1),
            this.update_lock()) : e.fbs && (this.fbs = e.fbs.map(function(e) {
                return {
                    name: e
                }
            }),
            this.families = e.families.map(function(e) {
                return {
                    name: e
                }
            }),
            this.create_footer(),
            this.show_family())
        },
        show_famdesc: function(e) {
            var t;
            e && ((t = ["<pre><hig>"]).push(e.name),
            t.push("</hig>\n"),
            t.push(e.desc),
            e.sp && (t.push("\n<hig>特点："),
            t.push(e.sp),
            t.push("</hig>")),
            e.iszc ? e.wait ? t.push('\n<span class="item-commands"><span  class="disabled">已报名参加正在等待进入战场</span></span>') : t.push('\n<span class="item-commands" ><span  cmd="">报名参加</span></span>') : t.push('\n<span class="item-commands"><span cmd="jh fam ' + e.index + ' start">进入地图</span></span>'),
            e.skills && t.push(e.skills),
            t.push("</pre>"),
            this.descElement.html(t.join("")),
            this.select(e.index),
            e.no_cache && (e.desc = null))
        },
        select: function(e) {
            var t, s, e = this.listElement.find("span[index='" + e + "']");
            e.length && !e.is(".selected") && (t = e[0].offsetTop,
            (s = this.listElement.height()) / 2 < t && (t = (s - e.height()) / 2,
            C.jh.listElement[0].scrollTop = t),
            C.jh.selectedItem && C.jh.selectedItem.removeClass("selected"),
            C.jh.selectedItem = e,
            C.jh.selectedItem.addClass("selected"))
        },
        show_fbdesc: function(e) {
            var t;
            e && ((t = ["<pre>"]).push(e.name),
            this.unlock >= e.index ? t.push("<hig>已解锁</hig>") : t.push("<red>未解锁</red>"),
            t.push(e.desc),
            this.unlock >= e.index ? (t.push('<span class="item-commands">'),
            e.no_single || t.push('<span cmd="jh fb ' + e.index + ' start1">进入副本</span>'),
            e.is_diffi && t.push('<span cmd="jh fb ' + e.index + ' start2">困难模式</span>'),
            e.is_multi && t.push('<span cmd="jh fb ' + e.index + ' start3">组队进入</span>'),
            t.push("</span>")) : t.push(""),
            t.push(e.reward),
            t.push("</pre>"),
            this.descElement.html(t.join("\n")),
            this.select(e.index))
        },
        show: function() {
            this.isShow || (this.element || (this.element = $("<div class='dialog-fb'><div class='fb-left'></div><div class='fb-right'></div></div>")),
            this.listElement = this.element.find(".fb-left").on("click", ".fb-item,.fam-item", this.item_click),
            this.descElement = this.element.find(".fb-right"),
            C.title("江湖"),
            C.icon("home"),
            this.element.appendTo(C.contentElement),
            this.create_footer(),
            this.fbs ? r("jh fb lock") : r("jh"),
            this.isShow = !0)
        },
        selected_item: 0,
        footers: ["门派", "副本"],
        create_footer: function() {
            if (this.fbs) {
                C.footer("");
                for (var e = [], t = 0; t < this.footers.length; t++)
                    e.push("<span class='footer-item" + (t == this.selected_item ? " select" : "") + "' for='" + t + "''>" + this.footers[t] + "</span>");
                $(e.join("")).appendTo(C.footerElement)
            }
        },
        item_click: function() {
            var e, t, s = $(this);
            s.is(".selected") || (e = s.attr("index"),
            s.is(".fb-item") ? (t = C.jh.fbs[e]).desc ? C.jh.show_fbdesc(t) : r("jh fb " + e) : (t = C.jh.families[e]).desc ? C.jh.show_famdesc(t) : r("jh fam " + e),
            C.jh.selectedItem && C.jh.selectedItem.removeClass("selected"),
            C.jh.selectedItem = s,
            C.jh.selectedItem.addClass("selected"))
        },
        update_lock: function() {
            var e;
            !this.listElement || (e = this.listElement.find(".fb-item[index='" + this.unlock + "']")).is(".lock") && e.removeClass("lock")
        },
        footerChanged: function(e) {
            e != this.selected_item && (0 == (this.selected_item = e) ? this.show_family() : (this.show_fbs(),
            this.selectedItem && this.selectedItem.is(".fb-item") || r("jh fb " + this.unlock)))
        },
        show_family: function() {
            for (var e = [], t = 0; t < this.families.length; t++) {
                var s = this.families[t];
                e.push('<div class="fam-item'),
                e.push('" index="'),
                e.push(t),
                e.push('">'),
                s.index = t,
                e.push(s.name),
                e.push("</div>")
            }
            this.listElement.html(e.join(""));
            var i = this.listElement.children()[0];
            this.item_click.call(i)
        },
        show_fbs: function() {
            for (var e = ["<div class='fb-content'>"], t = 0; t < this.fbs.length; t++) {
                var s = this.fbs[t];
                e.push('<div class="fb-item'),
                t > this.unlock && e.push(" lock"),
                s.index = t,
                e.push('" index="'),
                e.push(t),
                e.push('">'),
                e.push(s.name),
                e.push("</div>"),
                t != this.fbs.length - 1 && e.push("<div class='line'></div>")
            }
            e.join("</div>"),
            this.listElement.html(e.join(""))
        }
    },
    C.shop = {
        close: function() {
            this.element.remove(),
            this.isShow = !1
        },
        onData: function(e) {
            this.cash_money = e.cash_money,
            e.selllist && (this.selllist = e.selllist,
            this.show_items()),
            this.show_moeny()
        },
        show_items: function() {
            this.create_items(this.selllist)
        },
        show_moeny: function() {
            this.isShow && (window.isios ? C.footer("<div class='dialog-shop-footer'>你身上有<hij> " + this.cash_money + " 元宝</hij><span cmd='transmoney'>详情</span></div>") : C.footer("<div class='dialog-shop-footer'>你身上有<hij> " + this.cash_money + " 元宝</hij><span cmd='transmoney'>详情</span><span cmd='_confirm pay'>充值</span></div>"))
        },
        show: function(e) {
            this.element || (this.element = $("<div class='dialog-shop'></div>")),
            this.isShow || (C.title("商品列表"),
            C.icon("shopping-cart"),
            this.isShow = !0,
            this.element.appendTo(C.contentElement),
            this.selllist ? this.show_moeny() : r("shop"))
        },
        create_items: function(e) {
            for (var t = [], s = 0; s < e.length; s++) {
                var i = e[s];
                t.push("<div class='shop-item'>"),
                t.push("<h3>"),
                t.push(i.name),
                t.push("</h3>"),
                t.push("<pre class='shop-desc'>"),
                t.push(i.desc),
                t.push("</pre>"),
                t.push("<div class='shop-btn' "),
                t.push('cmd="_confirm shop '),
                t.push(s),
                t.push('">'),
                t.push(i.value),
                t.push("元宝</div>"),
                t.push("</div>")
            }
            this.element.html(t.join(""))
        }
    },
    C.message = {
        close: function() {
            this.element.remove(),
            this.isShow = !1
        },
        hide: function() {
            if (this.element.is(".detail"))
                return this.element.removeClass("detail"),
                this.detailID = null,
                !1
        },
        selected_item: 0,
        messages: [],
        isLoad: !1,
        unRead: 0,
        onData: function(e) {
            if (e.receive)
                return this.updateMessageState(e.receive, e.index);
            if (e.items)
                return this.createMessageDetail(e.id, e.items);
            if (null != e.unRead && (this.unRead = e.unRead),
            e.messages)
                for (var t = 0; t < e.messages.length; t++)
                    this.addMessage(e.messages[t]);
            e.message && (this.isShow || this.unRead++,
            this.messages && this.addMessage(e.message),
            "notice" == e.message.id && this.showNotice(e.message)),
            this.isShow && this.showMessages(e.message),
            this.showUnread()
        },
        showUnread: function() {
            this.unRead ? m.showFlag("message", this.unRead) : m.showFlag("message", 0)
        },
        addMessage: function(e) {
            for (var t = 0; t < this.messages.length; t++)
                if (this.messages[t].id == e.id)
                    return void (this.messages[t] = e);
            this.messages.push(e)
        },
        show: function(e) {
            this.unRead = 0,
            this.showUnread(),
            this.isShow || (this.isShow = !0,
            C.title("消息"),
            C.icon("envelope"),
            this.create_footer(),
            this.footerChanged(this.selected_item),
            this.isLoad || r("message"),
            this.isLoad = !0,
            this.element.on("click", ".message-item", this.showMessageDetail))
        },
        footers: ["消息", "队伍", "关系", "帮派"],
        footerElements: ["message", "team", "relation", "party"],
        create_footer: function() {
            for (var e = [], t = 0; t < this.footers.length; t++)
                e.push("<span class='footer-item" + (t == this.selected_item ? " select" : "") + "' for='" + t + "''>" + this.footers[t] + "</span>");
            C.footer(e.join("")),
            this.showChild()
        },
        footerChanged: function(e) {
            e != this.selected_item && (this.selected_item = e,
            this.showChild())
        },
        showChild: function() {
            var e = C[this.footerElements[this.selected_item]];
            e.element || (e.element = e.createElement()),
            C.contentElement.html(e.element),
            this.selectedChild != e && (this.selectedChild && this.selectedChild.close(),
            e.show(),
            this.selectedChild = e)
        },
        showNotice: function(e) {
            var t = ["\n<hiy>系统公告</hiy>\n"]
              , s = new Date(e.time);
            t.push(s.getFullYear()),
            t.push("年"),
            t.push(s.getMonth() + 1),
            t.push("月"),
            t.push(s.getDate()),
            t.push("日 "),
            t.push(s.getHours()),
            t.push("时"),
            t.push(s.getMinutes()),
            t.push("分\n<hic>"),
            t.push(e.content),
            t.push("\n</hic>"),
            k(t.join(""))
        },
        showMessages: function(e) {
            for (var t = [], s = 0; s < this.messages.length; s++) {
                var i = this.messages[s];
                t.push("<div class='message-item' fromid=\""),
                t.push(i.id),
                t.push("\"><div class='message-title'>"),
                t.push(i.name),
                t.push("<span class='message-time'>"),
                t.push(this.getTimedesc(i.time)),
                t.push("</span>"),
                t.push("</div>"),
                t.push("<div class='message-content'>"),
                t.push(i.content),
                t.push("</div>"),
                t.push("</div>")
            }
            t.length || t.push('<div class="empty">暂无新消息</div>'),
            this.listElement || (this.listElement = this.element.find(".message-list")),
            this.listElement.html(t.join("")),
            e && this.detailID == e.id && this.detailElement.append($(this.createMessageDetailItem(e.id, e.name, e)))
        },
        getTimedesc: function(e) {
            var t = new Date
              , e = new Date(e)
              , s = (t - e) / 1e3;
            if (s < 60)
                return "刚刚";
            if (s < 3600)
                return parseInt(s / 60) + "分钟前";
            if (e.getFullYear() == t.getFullYear() && e.getMonth() == t.getMonth()) {
                var s = e.getDate() - t.getDate()
                  , i = "今天 " + this.add_zero(e.getHours()) + "：" + this.add_zero(e.getMinutes());
                if (0 == s)
                    return i;
                if (1 == s)
                    return "昨天 " + i;
                if (2 == s)
                    return "前天 " + i
            }
            s = e.getMonth() + 1 + "月" + e.getDate() + "日 " + this.add_zero(e.getHours()) + "：" + this.add_zero(e.getMinutes());
            return 23328e5 < t - e && (s += "<blk>即将过期</blk>"),
            s
        },
        add_zero: function(e) {
            return e < 10 ? "0" + e : e
        },
        showMessageDetail: function() {
            var e = $(this).attr("fromid");
            e && (r("message " + e),
            C.message.element.addClass("detail"))
        },
        getMessageitem: function(e) {
            for (var t = 0; t < this.messages.length; t++)
                if (this.messages[t].id == e)
                    return this.messages[t]
        },
        createMessageDetail: function(e, t) {
            this.detailElement || (this.detailElement = this.element.find(".detail-list"));
            var s = this.getMessageitem(e);
            if (s) {
                var i = [];
                this.detailID = e;
                for (var n = 0; n < t.length; n++) {
                    var o = t[n];
                    i.push(this.createMessageDetailItem(e, s.name, o))
                }
                this.detailElement.html(i.join(""))
            }
        },
        createMessageDetailItem: function(e, t, s) {
            var i = [];
            if (i.push("<div class='detail-item' index='" + s.index + "'>"),
            i.push("<span class='detail-name'>"),
            i.push(t),
            i.push("</span>"),
            i.push("<span class='detail-time'>"),
            i.push(this.getTimedesc(s.time)),
            i.push("</span>"),
            i.push("<pre class='detail-content'>"),
            i.push(s.content),
            i.push("</pre>"),
            s.attach) {
                for (var n = 0; n < s.attach.length; n++)
                    i.push("<div class='detail-attach'>"),
                    i.push(s.attach[n].name),
                    i.push("</div>");
                s.rec ? i.push("<div class='item-commands'><span class='disabled'>已领取</span></div>") : i.push("<div class='item-commands'><span cmd='receive " + e + " " + s.index + "'>领取</span></div>")
            }
            return i.push("</div>"),
            i.join("")
        },
        createElement: function() {
            return $('<div class="dialog-message"><div class="message-list"></div><div class="detail-list"></div></div>')
        },
        updateMessageState: function(e, t) {
            this.detailID == e && this.detailElement.find(".detail-item[index='" + t + "']>.item-commands>span").html("已领取").addClass("disabled")
        }
    },
    C.relation = {
        createElement: function() {
            return $('<div class="dialog-relation"></div>')
        },
        show: function() {
            r("relation"),
            this.isShow = !0,
            C.title("关系"),
            C.icon("heart")
        },
        onData: function(e) {
            var t = [];
            t.push("<div class='relation-item'>"),
            e.husband ? (t.push("你的丈夫："),
            t.push(e.husband)) : e.wife ? (t.push("你的妻子："),
            t.push(e.wife)) : t.push("你目前没有结婚。"),
            t.push("</div>"),
            (e.wife || e.husband) && (t.push("<div class='item-commands'>"),
            t.push("<span cmd='_confirm greet wife'>❀送花❀</span>"),
            t.push("</div>")),
            t.push("<div class='relation-item'>"),
            e.shifu ? (t.push("你的师父："),
            t.push(e.shifu)) : e.tudi ? (t.push("你的徒弟："),
            t.push(e.tudi)) : t.push("你目前没有拜师，也没有收徒。"),
            e.shifu && (t.push("<div class='item-commands'>"),
            t.push("<span cmd='greet master'>请安</span>"),
            e.sid && t.push("<span cmd='team add " + e.sid + "'>邀请组队</span>"),
            t.push("</div>")),
            e.tid && (t.push("<div class='item-commands'>"),
            t.push("<span cmd='team add " + e.tid + "'>邀请组队</span>"),
            t.push("</div>")),
            null != e.st && (t.push("<div class='relation-item'>"),
            t.push("你本周已完成" + e.st + "次师徒任务。"),
            t.push("</div>")),
            e.reward && (t.push("<div class='relation-item'>"),
            t.push(e.reward),
            t.push("</div>")),
            t.push("</div>"),
            this.element.html(t.join(""))
        },
        close: function() {
            this.element.remove(),
            this.isShow = !1
        }
    },
    C.party = {
        createElement: function() {
            return $('<div class="dialog-party"></div>')
        },
        show: function() {
            r("party load"),
            this.isShow = !0,
            C.title(""),
            this.element.on("click", ".party-role", this.show_commands),
            C.icon("flag")
        },
        levels: ["", "<hio>帮主<hio>", "<hiz>副帮主</hiz>", "<hiy>长老</hiy>", "<hic>堂主</hic>", "帮众"],
        level_roles: [1, 20, 30, 40, 50, 60],
        level: 5,
        get_role: function(e) {
            if (this.roles)
                for (var t = 0; t < this.roles.length; t++)
                    if (this.roles[t].id == e)
                        return this.roles[t]
        },
        onData: function(e) {
            if (e.name) {
                var t = e
                  , s = [];
                s.push("<div class='party-title'><hio>"),
                s.push(t.name),
                s.push("</hio><span class='party-count'><nor>(" + e.roles.length + "/" + this.level_roles[e.level] + ")</nor></span>"),
                s.push("</div>"),
                t.notice && (s.push("<div class='party-notice'><hio><span class='glyphicon glyphicon-volume-up'></span>"),
                s.push(t.notice),
                s.push("</hio></div>")),
                s.push("<div class='party-roles'>");
                for (var i = 0; i < t.roles.length; i++) {
                    var n = t.roles[i];
                    n.id == S.player && (this.level = n.level),
                    s.push("<div class='party-role' roleid='" + n.id + "'>"),
                    s.push("<span class='role-level'>"),
                    s.push(this.levels[n.level]),
                    s.push("</span>"),
                    s.push("<span class='role-name'>"),
                    s.push(n.name),
                    s.push("</span>"),
                    s.push("<span class='role-sc'>"),
                    s.push(n.sc),
                    s.push("</span>"),
                    s.push("</div>")
                }
                s.push("</div>"),
                this.roles = e.roles,
                this.element.html(s.join(""))
            } else
                this.element.html("<wht>你没有加入帮派<wht>")
        },
        show_commands: function() {
            var e, t = C.party.get_role($(this).attr("roleid"));
            t && (e = ["<div class='item-commands'>"],
            t.id == S.player ? (e.push('<span cmd="party out">退出帮派</span>'),
            1 == C.party.level && e.push('<span cmd="party dissmiss">解散</span>')) : (t.level > C.party.level - 1 && 2 < t.level && e.push('<span cmd="party uplevel ' + t.id + '">提升为' + C.party.levels[t.level - 1] + "</span>"),
            t.level > C.party.level && t.level < 5 && e.push('<span cmd="party downlevel ' + t.id + '">降级为' + C.party.levels[t.level + 1] + "</span>"),
            1 == C.party.level && 2 == t.level && e.push('<span cmd="party trans ' + t.id + '">让位</span>'),
            t.level > C.party.level && e.push('<span cmd="party remove ' + t.id + '">开除</span>'),
            t.online && e.push('<span cmd="team add ' + t.id + '">邀请组队</span>')),
            1 != e.length && (e.push("</div>"),
            C.party.element.find(".item-commands").remove(),
            $(e.join("")).appendTo(this)))
        },
        close: function() {
            this.element.remove(),
            this.isShow = !1
        }
    },
    C.team = {
        createElement: function() {
            return $('<div class="dialog-team"></div>')
        },
        show: function() {
            r("team"),
            this.isShow = !0,
            C.title("队伍"),
            this.element.on("click", ".team-item", this.clickItem),
            C.icon("list")
        },
        items: [],
        onData: function(e) {
            if (e.items && (this.items = e.items,
            e.items.length ? this.isCap = e.items[0].id == S.player : this.isCap = 0),
            e.dismiss && (this.items.length = 0,
            this.isCap = !1),
            e.remove) {
                if (!this.items.length)
                    return;
                for (var t = 0; t < this.items.length; t++)
                    if (this.items[t].id == e.remove) {
                        this.items.splice(t, 1);
                        break
                    }
            }
            this.createItems()
        },
        close: function() {
            this.element.remove(),
            this.isShow = !1
        },
        createItems: function() {
            if (this.element) {
                for (var e = [], t = 0; t < this.items.length; t++) {
                    var s = this.items[t];
                    e.push("<div class='team-item' index='" + t + "'>"),
                    e.push("<span class='team-flag'>"),
                    e.push(0 < t ? "" : "<span class='glyphicon glyphicon-flag'></span>"),
                    e.push("</span>"),
                    e.push("<span class='team-title'>"),
                    e.push(s.name),
                    e.push("</span>"),
                    e.push("</div>")
                }
                e.length || e.push('<div class="empty">你还没有加入任何队伍。</div>'),
                this.element.html(e.join(""))
            }
        },
        clickItem: function() {
            var e, t, s = $(this), i = C.team.items[s.attr("index")];
            i && ((e = ["<div class='item-commands'>"]).push('<span cmd="look3 ' + i.id + '">查看</span>'),
            (t = C.team.items[0].id == S.player) && i.id != S.player ? e.push('<span cmd="team remove ' + i.id + '">移出队伍</span>') : i.id == S.player && e.push('<span cmd="team out ' + i.id + '">退出队伍</span>'),
            t && i.id == S.player && e.push('<span cmd="team set">更改分配方式</span>'),
            e.push("</div>"),
            C.team.element.find(".item-commands").remove(),
            $(e.join("")).appendTo(s))
        }
    },
    C.friend = {
        show: function() {
            if (!this.data)
                return r("friend")
        },
        onData: function(e) {}
    },
    C.pay = {
        createElement: function() {},
        show: function() {
            this.isShow = !0,
            this.element = this.createElement(),
            this.element.appendTo(C.contentElement)
        },
        close: function() {
            this.element.remove(),
            this.isShow = !1
        }
    };
    var T = {
        keep_msg: 0,
        show_hpnum: 0,
        show_hp: 0,
        item_autoheight: 0,
        item_firstme: 0,
        hide_roomdesc: 0,
        exits_dir: 0,
        show_command: 0,
        fontsize: "0.875rem",
        font: "",
        no_spmsg: 0,
        fontcolor: "#008000",
        backcolor: "black",
        auto_showcombat: 0,
        auto_sortitem: 0,
        auto_hideroom: 0,
        show_roomitem: 0,
        fullscreen: 0,
        channel_chat: 1,
        channel_tm: 1,
        channel_fam: 1,
        channel_es: 1,
        ban_pk: 0,
        off_plist: 0,
        combat_wrap: 0,
        action_wrap: 0,
        off_hp: 0,
        show_damage: 0,
        no_master: 0,
        no_team: 0,
        no_load: !0,
        load: function(e) {
            if (e)
                for (var t in e)
                    "fullscreen" != t && (this.set_prop(t, e[t]),
                    this[t] = e[t])
        },
        set_prop: function(e, t) {
            switch (e) {
            case "fontsize":
                $(".container").css("font-size", t);
                break;
            case "font":
                "none" === t && (t = ""),
                $(".container").css("font-family", t);
                break;
            case "fontcolor":
                $(document.body).css("color", t);
                break;
            case "backcolor":
                $(document.body).css("background-color", t);
                break;
            case "hide_roomdesc":
                t ? $(".room_desc").hide() : $(".room_desc").show();
                break;
            case "exits_dir":
                S.exits();
                break;
            case "off_hp":
                t ? $(".item-status").hide() : $(".item-status").show();
                break;
            case "combat_wrap":
                t ? $(".combat-commands").addClass("combat-wrap") : $(".combat-commands").removeClass("combat-wrap");
                break;
            case "action_wrap":
                t ? $(".room-commands").addClass("combat-wrap") : $(".room-commands").removeClass("combat-wrap");
                break;
            case "item_autoheight":
                t ? $(".room_items").removeAttr("style") : $(".room_items").attr("style", "max-height: 8rem; overflow-y: auto;");
                break;
            case "item_firstme":
                var s;
                1 == t && (s = $(".room_items>.room-item[itemid='" + S.player + "']"),
                $(".room_items").prepend(s));
                break;
            case "show_hp":
                I.IsShow || (1 == t ? $(".room-item>.item-status").show() : $(".room-item>.item-status").hide());
                break;
            case "show_hpnum":
                S.cur_room && S.items(S.cur_room);
                break;
            case "show_damage":
                $(".item-damage").remove();
                break;
            case "fullscreen":
                t ? T.launchFullScreen() : T.exitFullscreen();
                break;
            case "show_command":
                S.itemsElement.find(".item-commands").remove();
                break;
            case "no_spmsg":
                S.ChannelElement && (t ? S.ChannelElement.hide() : S.ChannelElement.show())
            }
        },
        save: function(e, t) {
            this[e] = t,
            this.set_prop(e, t),
            r("setting " + e + " " + t)
        },
        launchFullScreen: function(e) {
            (e = e || document.documentElement).requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullscreen ? e.webkitRequestFullscreen() : e.msRequestFullscreen && e.msRequestFullscreen()
        },
        exitFullscreen: function() {
            document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen()
        }
    }
      , E = "万俟司马上官欧阳夏侯诸葛闻人东方赫连皇甫尉迟公羊澹台公冶宗政濮阳淳于单于太叔申屠公孙仲孙轩辕令狐锺离宇文长孙慕容鲜于闾丘司徒司空丌官司寇子车颛孙端木巫马公西乐正公良拓拔夹谷谷梁梁丘左丘东门西门"
      , L = "赵钱孙李周吴郑王冯陈楮卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚谢邹喻柏水窦章云苏潘葛奚范彭郎"
      , A = "世舜丞主产仁仇仓仕仞任伋众伸佐佺侃侪促俟信俣修倝倡倧偿储僖僧僳儒俊伟列则刚创前剑助劭势勘参叔吏嗣士壮孺守宽宾宋宗宙宣实宰尊峙峻崇崈川州巡帅庚战才承拯操斋昌晁暠曹曾珺玮珹琒琛琩琮琸瑎玚璟璥瑜生畴矗矢石磊砂碫示社祖祚祥禅稹穆竣竦综缜绪舱舷船蚩襦轼辑轩子杰榜碧葆莱蒲天乐东钢铎铖铠铸铿锋镇键镰馗旭骏骢骥驹驾骄诚诤赐慕端征坚建弓强彦御悍擎攀旷昂晷健冀凯劻啸柴木林森朴骞寒函高魁魏鲛鲲鹰丕乒候冕勰备宪宾密封山峰弼彪彭旁日明昪昴胜汉涵汗浩涛淏清澜浦澉澎澔瀚瀛灏沧虚豪豹辅辈迈邶合部阔雄霆震韩俯颁颇频颔风飒飙飚马亮仑仝代儋利力劼勒卓哲喆展帝弛弢弩彰征律德志忠思振挺掣旲旻昊昮晋晟晸朕朗段殿泰滕炅炜煜煊炎选玄勇君稼黎利贤谊金鑫辉墨欧有友闻问"
      , R = "筠柔竹霭凝晓欢霄枫芸菲寒伊亚宜姬舒影荔枝思丽秀娟英华慧巧美娜静淑惠珠翠雅芝玉萍红娥玲芬芳燕彩春菊勤珍贞莉兰凤洁梅琳素云莲真环雪荣妹霞香月莺媛艳瑞凡佳嘉琼桂娣叶璧璐娅琦晶妍茜秋珊莎锦黛青倩婷姣婉娴瑾颖露瑶怡婵雁蓓纨仪荷丹蓉眉君琴蕊薇菁梦岚苑婕馨瑗琰韵融园艺咏卿聪澜纯毓悦昭冰爽琬茗羽希宁欣飘育滢馥";
    var P = {
        DEFAULT: {
            height: 60,
            onOK: function() {},
            footer: !0,
            btn_text: "确认"
        },
        Show: function(e) {
            this.Init(),
            this.Parameter = $.extend({}, this.DEFAULT, e || {}),
            this.content.empty().append(this.Parameter.content),
            this.element.css({
                height: this.Parameter.height,
                bottom: 0,
                display: "block"
            }),
            this.Parameter.footer ? (this.btn.show(),
            this.btn.find(".btn-text").html(this.Parameter.btn_text),
            this.content.css("width", "65%")) : (this.btn.hide(),
            this.content.css("width", "100%")),
            this.isShow = !0
        },
        Close: function() {
            P.isShow && (P.element.css("bottom", -P.Parameter.height),
            setTimeout(function() {
                P.element.hide()
            }, 200),
            P.isShow = !1)
        },
        Init: function() {
            this._init || (this.element = $(".dialog-confirm"),
            this.content = this.element.find(".dialog-content"),
            this.btn = this.element.find(".dialog-btn"),
            this.element.on("click", ".btn-ok", function(e) {
                return P.Parameter.onOK(),
                P.Close(),
                !1
            }),
            this.element.on("click", ".btn", function(e) {
                var t = P.max_count || 1e3
                  , e = $(e.target)
                  , s = parseInt(e.attr("ac"))
                  , e = e.parent().find("input")
                  , i = parseInt(e.val());
                return "NaN" == i.toString() && (i = 0),
                -10 == s ? i -= 10 : 10 == s ? (1 == i && (i = 0),
                i += 10) : i = 1 == s ? t : 1,
                i < 1 ? i = 1 : t < i && (i = t),
                e.val(i),
                !1
            }),
            this._init = !0)
        },
        Process: function(e) {
            var t = e[1]
              , s = ""
              , t = ("dc" == t && (t = e[3],
            s = (s = e.splice(1, 2))[0] + " " + s[1] + " "),
            this["Show_" + t]);
            t && t.call(this, e, s)
        },
        get_countelement: function(e, t) {
            return this.count_element || (this.count_element = $('<div  class="confirm-count"><span class="btn" ac="0">最少</span><span ac="-10" class="btn">减10</span><input type="text" value="1" /><span class="btn"  ac="10" >加10</span><span class="btn" ac="1" >最多</span></div>')),
            e ? this.count_element.find("input").val(e) : this.count_element.find("input").val(1),
            t = t && parseInt(t),
            this.max_count = t || 1e3,
            this.count_element
        },
        Show_shop: function(e) {
            var t = e[2];
            !t || (e = C.shop.selllist[t]) && this.Show({
                content: this.get_countelement(),
                btn_text: "购买" + e.name,
                onOK: function() {
                    var e = P.count_element.find("input")
                      , e = parseInt(e.val());
                    (e = "NaN" == e.toString() ? 0 : e) && (e > P.max_count && (e = P.max_count),
                    r("shop " + t + " " + e))
                }
            })
        },
        Show_buy: function(t) {
            var e, s = t[3];
            s && (e = parseInt(t[2]),
            this.Show({
                content: this.get_countelement(1, -1 == e ? 9999 : e),
                btn_text: "购买",
                onOK: function() {
                    var e = P.count_element.find("input")
                      , e = parseInt(e.val());
                    (e = "NaN" == e.toString() ? 0 : e) && r("buy " + (e = e > P.max_count ? P.max_count : e) + " " + s + " from " + t[5])
                }
            }))
        },
        Show_greet: function(e) {
            this.Show({
                content: this.get_countelement(1, 99),
                btn_text: "送花",
                onOK: function() {
                    var e = P.count_element.find("input")
                      , e = parseInt(e.val());
                    (e = "NaN" == e.toString() ? 0 : e) && r("greet " + (e = e > P.max_count ? P.max_count : e))
                }
            })
        },
        Show_sell: function(t) {
            var s = t[3];
            s && this.Show({
                content: this.get_countelement(t[2], t[2]),
                btn_text: "卖出",
                onOK: function() {
                    var e = P.count_element.find("input")
                      , e = parseInt(e.val());
                    (e = "NaN" == e.toString() ? 0 : e) && r("sell " + (e = e > P.max_count ? P.max_count : e) + " " + s + " to " + t[5])
                }
            })
        },
        Show_store: function(e) {
            var t = e[3];
            if (t)
                return 1 == e[2] ? r((C.list.is_bookshelf ? "sj " : "") + "store " + t) : void this.Show({
                    content: this.get_countelement(e[2], e[2]),
                    btn_text: "存入",
                    onOK: function() {
                        var e = P.count_element.find("input")
                          , e = parseInt(e.val());
                        (e = "NaN" == e.toString() ? 0 : e) && (e > P.max_count && (e = P.max_count),
                        r((C.list.is_bookshelf ? "sj " : "") + "store " + e + " " + t))
                    }
                })
        },
        Show_fenjie: function(e, t) {
            var s = e[2];
            if (s) {
                e = (C.pack.isShow ? C.pack : C.pack2).get_item(s);
                if (e)
                    return -1 == e.name.indexOf("★") ? r("fenjie " + s) : void this.Show({
                        content: "是否确认分解" + e.name + "？",
                        btn_text: "确认分解",
                        onOK: function() {
                            r(t + "fenjie " + s)
                        }
                    })
            }
        },
        Show_qu: function(e) {
            var t = e[2];
            if (t) {
                e = C.list.find_item(3, t);
                if (e)
                    return 1 === e.count ? r((C.list.is_bookshelf ? "sj " : "") + "qu 1 " + t) : void this.Show({
                        content: this.get_countelement(e.count, e.count),
                        btn_text: "取出",
                        onOK: function() {
                            var e = P.count_element.find("input")
                              , e = parseInt(e.val());
                            (e = "NaN" == e.toString() ? 0 : e) && (e > P.max_count && (e = P.max_count),
                            r((C.list.is_bookshelf ? "sj " : "") + "qu " + e + " " + t))
                        }
                    })
            }
        },
        Show_drop: function(t, s) {
            var e, i = t[3];
            !i || (e = (C.pack.isShow ? C.pack : C.pack2).get_item(i)) && this.Show({
                content: 1 == t[2] ? "是否确认丢掉" + e.name + "？" : this.get_countelement(t[2], t[2]),
                btn_text: "丢掉",
                onOK: function() {
                    if (1 == t[2])
                        return r(s + "drop " + i);
                    var e = P.count_element.find("input")
                      , e = parseInt(e.val());
                    (e = "NaN" == e.toString() ? 0 : e) > P.max_count && (e = P.max_count),
                    r(s + "drop " + e + " " + i)
                }
            })
        },
        Show_give: function(e, t) {
            var s = e[4];
            if (s) {
                e = C.pack2.get_item(s);
                if (e)
                    return 1 == e.count ? r(t + "give " + S.player + " 1 " + s) : void this.Show({
                        content: this.get_countelement(e.count, e.count),
                        btn_text: "拿来",
                        onOK: function() {
                            var e = P.count_element.find("input")
                              , e = parseInt(e.val());
                            (e = "NaN" == e.toString() ? 0 : e) > P.max_count && (e = P.max_count),
                            r(t + "give " + S.player + " " + e + " " + s)
                        }
                    })
            }
        },
        Show_trade_add: function(s) {
            s && this.Show({
                content: this.get_countelement(s.count, s.count),
                btn_text: "确定",
                onOK: function() {
                    var e, t = P.count_element.find("input"), t = parseInt(t.val());
                    "NaN" == t.toString() || t <= 0 || (t > s.count && (t = s.count),
                    (e = M.Clone(s)).count = t,
                    console.log(e),
                    C.trade.add_trade(e))
                }
            })
        },
        Show_fangqi: function(e, t) {
            var s = e[2];
            !s || (e = (t ? C.master : C.skills).skills[s]) && this.Show({
                content: "是否确认放弃技能" + e.name + "？",
                onOK: function() {
                    r(t + "fangqi " + s)
                }
            })
        },
        Show_combine: function(e, t) {
            var s = e[2];
            if (s) {
                var i = C.pack.get_item(s);
                if (i) {
                    e = parseInt(e[3]);
                    if (e)
                        return 1 == (i = parseInt(i.count / e)) ? r("combine " + s) : void this.Show({
                            content: this.get_countelement(i),
                            btn_text: "合成",
                            onOK: function() {
                                var e = P.count_element.find("input")
                                  , e = parseInt(e.val());
                                (e = "NaN" == e.toString() ? 0 : e) && (e > P.max_count && (e = P.max_count),
                                r(t + "combine " + s + " " + e))
                            }
                        })
                }
            }
        },
        Show_pay: function() {
            r("pay 0 " + (/mobile/i.test(navigator.userAgent) ? "m" : "c"))
        }
    }
      , M = {
        Json2Str: function(e) {
            return "object" == typeof e ? null == e ? "" : JSON.stringify(e) : e
        },
        Json2Str2: function(e) {
            return null == e ? "" : JSON.stringify(e)
        },
        Date2Str: function(e) {
            return e.valueOf ? "/Date(" + e.valueOf() + ")/" : e
        },
        Clone: function(e) {
            var t, s = {};
            for (t in e)
                s[t] = e[t];
            return s
        },
        Str2Json: function(e) {
            return "{" != e.substring(0, 1) && (e = "{" + e + "}"),
            new Function("return " + e)()
        },
        Str2Json2: function(e) {
            return new Function("return " + e)()
        },
        Str2XML: function(e) {
            var t;
            return window.DOMParser ? t = (new DOMParser).parseFromString(e, "text/xml") : ((t = new ActiveXObject("Microsoft.XMLDOM")).async = "false",
            t.loadXML(e)),
            $(t.documentElement)
        },
        Settings: {
            MaxUploadFileLength: 31457280
        },
        encode: function(e) {
            return encodeURIComponent(e)
        },
        CookieHelper: {
            setCookie: function(e, t, s) {
                e = e + "=" + escape(t);
                s && ((t = new Date).setTime(t.getTime() + 60 * s * 1e3),
                e += "; expires=" + t.toGMTString()),
                document.cookie = e
            },
            getCookie: function(e) {
                return 0 < document.cookie.length && -1 != (begin = document.cookie.indexOf(e + "=")) ? (begin += e.length + 1,
                -1 == (end = document.cookie.indexOf(";", begin)) && (end = document.cookie.length),
                unescape(document.cookie.substring(begin, end))) : ""
            },
            delCookie: function(e) {
                var t;
                this.getCookie(e) && ((t = new Date).setYear(1e3),
                document.cookie = e + "=;" + t.toGMTString())
            }
        },
        C_STR: "零一二三四五六七八九",
        C_STR2: ["", "十", "百", "千", "万", "亿"],
        C_STR3: ["", "万", "亿"],
        to_c: function(e) {
            if (!e)
                return "零";
            for (var t = "", s = 0, i = 0; e; ) {
                var n = e % 10;
                s && (s % 4 == 0 && 3 != i ? (t = M.C_STR3[s / 4] + t,
                i = 3) : n && 2 != i && (t = M.C_STR2[s % 4] + t,
                i = 2)),
                n ? ((1 != n || 10 < e || s % 4 != 1) && (t = M.C_STR[n] + t),
                i = 1) : 1 == i && (t = M.C_STR[n] + t,
                i = 0),
                e = parseInt(e / 10),
                s++
            }
            return t
        },
        Get: function(e, t, s) {
            if (e) {
                var i = [];
                if ($.isPlainObject(t)) {
                    for (var n in t)
                        t[n] && i.push(n + "=" + M.encode(M.Json2Str(t[n])));
                    e = e + "?" + i.join("&")
                } else if ($.isFunction(t))
                    s = t;
                else if ($.isArray(t)) {
                    for (var o = 0; o < t.length; o++)
                        i.push(M.encode(M.Json2Str(t[o])));
                    e = e + "/" + i.join("/")
                }
                return M.Request({
                    url: "/" + e,
                    callBack: s,
                    type: "get"
                })
            }
        },
        Post: function(e, t, s) {
            var i, n = [];
            if ($.isPlainObject(t)) {
                for (var o in t)
                    t[o] && n.push(o + "=" + M.Json2Str(t[o]));
                i = n.join("&")
            } else {
                if (!t.length)
                    return;
                for (var a = 0; a < t.length; a++)
                    n.push(M.Json2Str(t[a]));
                i = M.Json2Str2(n)
            }
            return M.Request({
                url: "/" + e,
                data: i,
                callBack: s,
                type: "post"
            })
        },
        Request: function(e) {
            var i = e.callBack
              , t = $.isFunction(i);
            e.isParseData;
            if ($.ajax(e.url, {
                data: e.data,
                type: e.type || "post",
                async: t,
                dataType: e.dataType || "json",
                statusCode: {
                    404: function() {}
                },
                success: function(e) {
                    $.isFunction(i) && i(e)
                },
                error: function(e, t, s) {
                    s = e.responseText;
                    $.isFunction(i) && i(s)
                }
            }),
            0 == t)
                return null
        },
        RequestOver: function(e) {
            return !(e.Code < 0)
        },
        ToDate: function() {
            var e;
            return 0 == arguments.length ? new Date : 1 == arguments.length ? (e = arguments[0].split("-"),
            new Date(e[0],parseInt(e[1]) - 1,e[2])) : new Date(arguments[0],arguments[1],arguments[2])
        },
        CheckInputs: function(e, t) {
            for (var s = e.find("input"), i = 0; i < s.length; i++) {
                var n = $(s[i]).val()
                  , o = !1;
                if (t)
                    for (var a = 0; a < t.length; a++)
                        t[a] == n && (o = !0);
                o ? $(s[i]).prop("checked", !0) : $(s[i]).removeProp("checked")
            }
        }
    }
      , z = (Array.prototype.Remove = function(e) {
        for (var t = this.length, s = 0; s < t; s++)
            if (this[s] == e)
                return this.splice(s, 1),
                this;
        return this
    }
    ,
    Array.prototype.Has = function(e) {
        for (var t = this.length, s = 0; s < t; s++)
            if (this[s] == e)
                return !0;
        return !1
    }
    ,
    Array.prototype.Map = function(e) {
        for (var t = this.length, s = [], i = 0; i < t; i++) {
            var n = e(this[i]);
            n && s.push(n)
        }
        return s
    }
    ,
    Array.prototype.First = function(e) {
        for (var t = this.length, s = 0; s < t; s++) {
            var i = this[s];
            if (e(i))
                return i
        }
        return null
    }
    ,
    Array.prototype.Where = function(e) {
        for (var t = this.length, s = [], i = 0; i < t; i++) {
            var n = this[i];
            e(n) && s.push(n)
        }
        return s
    }
    ,
    Date.prototype.AddDays = function(e) {
        return this.setDate(this.getDate() + e),
        this
    }
    ,
    Date.prototype.AddMonths = function(e) {
        return this.setMonth(this.getMonth() + e),
        this
    }
    ,
    Date.prototype.ToDateString = function() {
        var e = this.getMonth() + 1
          , t = (e < 10 && (e = "0" + e),
        this.getDate());
        return t < 10 && (t = "0" + t),
        this.getFullYear() + "-" + e + "-" + t
    }
    ,
    Date.prototype.AddYears = function(e) {
        return this.setFullYear(this.getFullYear() + e),
        this
    }
    ,
    0)
      , Y = WebSocket;
    function q(e, t) {
        this.IP = e,
        this.Port = t
    }
    window.WebSocket = null,
    q.prototype.Connect = function(e) {
        try {
            location.protocol;
            this.ws = new Y("ws://" + this.IP + ":" + this.Port),
            this.ws.onopen = this.OnConnect,
            this.ws.onclose = this.OnClose.bind(this),
            this.ws.onerror = this.OnError,
            this.ws.onmessage = this.OnReceived.bind(this),
            this.index = z++
        } catch (e) {
            this.OnError && this.OnError(e)
        }
    }
    ,
    q.prototype.OnReceived = function(e) {
        var t;
        e && e.data && ("{" == (e = e.data)[0] || "[" == e[0] ? (t = new Function("return " + e + ";"),
        this.OnData(t())) : this.OnMessage(e))
    }
    ,
    q.prototype.Send = function(e) {
        try {
            this.ws.send(e)
        } catch (e) {
            k(e)
        }
    }
    ,
    q.prototype.Destroy = function() {
        this.ws.onclose = null,
        this.ws.close()
    }
    ,
    q.prototype.Close = function() {
        this.ws.close()
    }
    ,
    q.prototype.Connected = function() {
        return this.ws && 1 == this.ws.readyState
    }
    ;
    var D = {
        UserAPI: {
            Login: function(e, t, s) {
                return M.Post("UserAPI/Login", {
                    code: e,
                    pwd: t
                }, s)
            },
            IsRegistValidation: function(e) {
                return M.Get("UserAPI/IsRegistValidation", e)
            },
            ValidationImage: function(e) {
                return M.Get("UserAPI/ValidationImage", e)
            },
            Regist: function(e, t) {
                return M.Post("UserAPI/Regist", {
                    user: e
                }, t)
            },
            Enter: function(e, t) {
                return M.Get("e", [e], t)
            },
            ChangePassword: function(e, t, s, i) {
                return M.Post("UserAPI/ChangePassword", {
                    oldpwd: e,
                    pwd: t,
                    no: s
                }, i)
            },
            LoginOut: function(e) {
                return M.Get("UserAPI/LoginOut", e)
            },
            GetRoles: function(e, t) {
                return M.Get("UserAPI/GetRoles", [e], t)
            },
            AddRole: function(e, t) {
                return M.Post("UserAPI/AddRole", {
                    player: e
                }, t)
            },
            GetUser: function(e) {
                return M.Get("UserAPI/GetUser", e)
            },
            Search: function(e, t, s, i) {
                return M.Get("UserAPI/Search", [e, t, s], i)
            },
            ResetPassword: function(e, t) {
                return M.Get("UserAPI/ResetPassword", [e], t)
            },
            RecoverUser: function(e, t) {
                return M.Get("UserAPI/RecoverUser", [e], t)
            },
            LoadPlayer: function(e, t, s) {
                return M.Get("UserAPI/LoadPlayer", [e, t], s)
            },
            GetPhone: function(e) {
                return M.Get("UserAPI/GetPhone", e)
            },
            BindPhone: function(e, t, s, i) {
                return M.Post("UserAPI/BindPhone", {
                    code: e,
                    no: t,
                    pwd: s
                }, i)
            },
            SendValidateCode: function(e, t) {
                return M.Get("UserAPI/SendValidateCode", [e], t)
            },
            ResetPasswordByPhone: function(e, t, s, i, n) {
                return M.Post("UserAPI/ResetPasswordByPhone", {
                    name: e,
                    phone: t,
                    vcode: s,
                    pwd: i
                }, n)
            },
            NewServer: function(e) {
                return M.Get("UserAPI/NewServer", e)
            },
            GetServer: function(e) {
                return M.Get("Game/GetServer", e)
            }
        }
    }
}();
